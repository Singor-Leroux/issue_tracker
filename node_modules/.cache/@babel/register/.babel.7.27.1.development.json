{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\tests\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"filename\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\tests\\\\2_functional-tests.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.27.1:development":{"value":{"code":"// tests/2_functional-tests.js\nconst chaiHttp = require('chai-http');\nconst chai = require('chai');\nconst assert = chai.assert;\nconst server = require('../server'); // Your app's server\n\nchai.use(chaiHttp);\nlet testIssueId1;\nlet testIssueId2;\nconst testProject = 'apitest'; // Use a consistent project for tests\n\nsuite('Functional Tests', function () {\n  suite('POST /api/issues/{project}', function () {\n    test('Create an issue with every field', function (done) {\n      chai.request(server).post(`/api/issues/${testProject}`).send({\n        issue_title: 'Title 1',\n        issue_text: 'text',\n        created_by: 'Functional Test - Every field',\n        assigned_to: 'Chai and Mocha',\n        status_text: 'In QA'\n      }).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.property(res.body, 'issue_title');\n        assert.property(res.body, 'issue_text');\n        assert.property(res.body, 'created_by');\n        assert.property(res.body, 'assigned_to');\n        assert.property(res.body, 'status_text');\n        assert.property(res.body, 'created_on');\n        assert.property(res.body, 'updated_on');\n        assert.property(res.body, 'open');\n        assert.property(res.body, '_id');\n        assert.equal(res.body.issue_title, 'Title 1');\n        assert.equal(res.body.issue_text, 'text');\n        assert.equal(res.body.created_by, 'Functional Test - Every field');\n        assert.equal(res.body.assigned_to, 'Chai and Mocha');\n        assert.equal(res.body.status_text, 'In QA');\n        assert.isTrue(res.body.open);\n        testIssueId1 = res.body._id; // Save for later tests\n        done();\n      });\n    });\n    test('Create an issue with only required fields', function (done) {\n      chai.request(server).post(`/api/issues/${testProject}`).send({\n        issue_title: 'Title 2',\n        issue_text: 'text',\n        created_by: 'Functional Test - Required fields'\n      }).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.issue_title, 'Title 2');\n        assert.equal(res.body.issue_text, 'text');\n        assert.equal(res.body.created_by, 'Functional Test - Required fields');\n        assert.equal(res.body.assigned_to, '');\n        assert.equal(res.body.status_text, '');\n        assert.isTrue(res.body.open);\n        testIssueId2 = res.body._id; // Save for later tests\n        done();\n      });\n    });\n    test('Create an issue with missing required fields', function (done) {\n      chai.request(server).post(`/api/issues/${testProject}`).send({\n        issue_title: 'Title 3'\n        // Missing issue_text and created_by\n      }).end(function (err, res) {\n        assert.equal(res.status, 200); // Server should respond with 200 even for app errors\n        assert.deepEqual(res.body, {\n          error: 'required field(s) missing'\n        });\n        done();\n      });\n    });\n  });\n  suite('GET /api/issues/{project}', function () {\n    test('View issues on a project', function (done) {\n      chai.request(server).get(`/api/issues/${testProject}`).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.isArray(res.body);\n        assert.operator(res.body.length, '>=', 2); // At least the two created above\n        done();\n      });\n    });\n    test('View issues on a project with one filter', function (done) {\n      chai.request(server).get(`/api/issues/${testProject}?open=true`).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.isArray(res.body);\n        res.body.forEach(issue => {\n          assert.isTrue(issue.open);\n        });\n        done();\n      });\n    });\n    test('View issues on a project with multiple filters', function (done) {\n      chai.request(server).get(`/api/issues/${testProject}?open=true&created_by=Functional Test - Every field`).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.isArray(res.body);\n        res.body.forEach(issue => {\n          assert.isTrue(issue.open);\n          assert.equal(issue.created_by, 'Functional Test - Every field');\n        });\n        done();\n      });\n    });\n  });\n  suite('PUT /api/issues/{project}', function () {\n    test('Update one field on an issue', function (done) {\n      chai.request(server).put(`/api/issues/${testProject}`).send({\n        _id: testIssueId1,\n        issue_text: 'Updated text for testIssueId1'\n      }).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.deepEqual(res.body, {\n          result: 'successfully updated',\n          '_id': testIssueId1\n        });\n        done();\n      });\n    });\n    test('Update multiple fields on an issue', function (done) {\n      chai.request(server).put(`/api/issues/${testProject}`).send({\n        _id: testIssueId2,\n        issue_title: 'Updated Title 2',\n        assigned_to: 'Tester X',\n        open: 'false' // Send as string, API should handle conversion\n      }).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.deepEqual(res.body, {\n          result: 'successfully updated',\n          '_id': testIssueId2\n        });\n\n        // Verify update\n        chai.request(server).get(`/api/issues/${testProject}?_id=${testIssueId2}`).end(function (err, getRes) {\n          assert.equal(getRes.body[0].issue_title, 'Updated Title 2');\n          assert.equal(getRes.body[0].assigned_to, 'Tester X');\n          assert.isFalse(getRes.body[0].open);\n          done();\n        });\n      });\n    });\n    test('Update an issue with missing _id', function (done) {\n      chai.request(server).put(`/api/issues/${testProject}`).send({\n        issue_title: 'No ID update'\n      }).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.deepEqual(res.body, {\n          error: 'missing _id'\n        });\n        done();\n      });\n    });\n    test('Update an issue with no fields to update', function (done) {\n      chai.request(server).put(`/api/issues/${testProject}`).send({\n        _id: testIssueId1\n        // No other fields\n      }).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.deepEqual(res.body, {\n          error: 'no update field(s) sent',\n          '_id': testIssueId1\n        });\n        done();\n      });\n    });\n    test('Update an issue with an invalid _id', function (done) {\n      const invalidId = 'invalid123id';\n      chai.request(server).put(`/api/issues/${testProject}`).send({\n        _id: invalidId,\n        issue_title: 'Update with invalid ID'\n      }).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.deepEqual(res.body, {\n          error: 'could not update',\n          '_id': invalidId\n        });\n        done();\n      });\n    });\n  });\n  suite('DELETE /api/issues/{project}', function () {\n    test('Delete an issue', function (done) {\n      chai.request(server).delete(`/api/issues/${testProject}`).send({\n        _id: testIssueId1\n      }).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.deepEqual(res.body, {\n          result: 'successfully deleted',\n          '_id': testIssueId1\n        });\n        done();\n      });\n    });\n    test('Delete an issue with an invalid _id', function (done) {\n      const invalidId = 'invalid123idfordelete';\n      chai.request(server).delete(`/api/issues/${testProject}`).send({\n        _id: invalidId\n      }).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.deepEqual(res.body, {\n          error: 'could not delete',\n          '_id': invalidId\n        });\n        done();\n      });\n    });\n    test('Delete an issue with missing _id', function (done) {\n      chai.request(server).delete(`/api/issues/${testProject}`).send({\n        // Missing _id\n      }).end(function (err, res) {\n        assert.equal(res.status, 200);\n        assert.deepEqual(res.body, {\n          error: 'missing _id'\n        });\n        done();\n      });\n    });\n\n    // Cleanup: Delete the second test issue\n    teardown(function (done) {\n      chai.request(server).delete(`/api/issues/${testProject}`).send({\n        _id: testIssueId2\n      }).end(function () {\n        done(); // Don't care about the result, just cleaning up\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["chaiHttp","require","chai","assert","server","use","testIssueId1","testIssueId2","testProject","suite","test","done","request","post","send","issue_title","issue_text","created_by","assigned_to","status_text","end","err","res","equal","status","property","body","isTrue","open","_id","deepEqual","error","get","isArray","operator","length","forEach","issue","put","result","getRes","isFalse","invalidId","delete","teardown"],"sourceRoot":"C:\\Users\\Singor.KPATCHOU\\Desktop\\issue-tracker\\tests\\","sources":["2_functional-tests.js"],"sourcesContent":["// tests/2_functional-tests.js\r\nconst chaiHttp = require('chai-http');\r\nconst chai = require('chai');\r\nconst assert = chai.assert;\r\nconst server = require('../server'); // Your app's server\r\n\r\nchai.use(chaiHttp);\r\n\r\nlet testIssueId1;\r\nlet testIssueId2;\r\nconst testProject = 'apitest'; // Use a consistent project for tests\r\n\r\nsuite('Functional Tests', function() {\r\n\r\n  suite('POST /api/issues/{project}', function() {\r\n    \r\n    test('Create an issue with every field', function(done) {\r\n     chai.request(server)\r\n      .post(`/api/issues/${testProject}`)\r\n      .send({\r\n        issue_title: 'Title 1',\r\n        issue_text: 'text',\r\n        created_by: 'Functional Test - Every field',\r\n        assigned_to: 'Chai and Mocha',\r\n        status_text: 'In QA'\r\n      })\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.property(res.body, 'issue_title');\r\n        assert.property(res.body, 'issue_text');\r\n        assert.property(res.body, 'created_by');\r\n        assert.property(res.body, 'assigned_to');\r\n        assert.property(res.body, 'status_text');\r\n        assert.property(res.body, 'created_on');\r\n        assert.property(res.body, 'updated_on');\r\n        assert.property(res.body, 'open');\r\n        assert.property(res.body, '_id');\r\n        assert.equal(res.body.issue_title, 'Title 1');\r\n        assert.equal(res.body.issue_text, 'text');\r\n        assert.equal(res.body.created_by, 'Functional Test - Every field');\r\n        assert.equal(res.body.assigned_to, 'Chai and Mocha');\r\n        assert.equal(res.body.status_text, 'In QA');\r\n        assert.isTrue(res.body.open);\r\n        testIssueId1 = res.body._id; // Save for later tests\r\n        done();\r\n      });\r\n    });\r\n    \r\n    test('Create an issue with only required fields', function(done) {\r\n      chai.request(server)\r\n      .post(`/api/issues/${testProject}`)\r\n      .send({\r\n        issue_title: 'Title 2',\r\n        issue_text: 'text',\r\n        created_by: 'Functional Test - Required fields'\r\n      })\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.equal(res.body.issue_title, 'Title 2');\r\n        assert.equal(res.body.issue_text, 'text');\r\n        assert.equal(res.body.created_by, 'Functional Test - Required fields');\r\n        assert.equal(res.body.assigned_to, '');\r\n        assert.equal(res.body.status_text, '');\r\n        assert.isTrue(res.body.open);\r\n        testIssueId2 = res.body._id; // Save for later tests\r\n        done();\r\n      });\r\n    });\r\n    \r\n    test('Create an issue with missing required fields', function(done) {\r\n      chai.request(server)\r\n      .post(`/api/issues/${testProject}`)\r\n      .send({\r\n        issue_title: 'Title 3'\r\n        // Missing issue_text and created_by\r\n      })\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200); // Server should respond with 200 even for app errors\r\n        assert.deepEqual(res.body, { error: 'required field(s) missing' });\r\n        done();\r\n      });\r\n    });\r\n    \r\n  });\r\n\r\n  suite('GET /api/issues/{project}', function() {\r\n    \r\n    test('View issues on a project', function(done) {\r\n      chai.request(server)\r\n      .get(`/api/issues/${testProject}`)\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.isArray(res.body);\r\n        assert.operator(res.body.length, '>=', 2); // At least the two created above\r\n        done();\r\n      });\r\n    });\r\n    \r\n    test('View issues on a project with one filter', function(done) {\r\n      chai.request(server)\r\n      .get(`/api/issues/${testProject}?open=true`)\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.isArray(res.body);\r\n        res.body.forEach(issue => {\r\n          assert.isTrue(issue.open);\r\n        });\r\n        done();\r\n      });\r\n    });\r\n    \r\n    test('View issues on a project with multiple filters', function(done) {\r\n      chai.request(server)\r\n      .get(`/api/issues/${testProject}?open=true&created_by=Functional Test - Every field`)\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.isArray(res.body);\r\n        res.body.forEach(issue => {\r\n          assert.isTrue(issue.open);\r\n          assert.equal(issue.created_by, 'Functional Test - Every field');\r\n        });\r\n        done();\r\n      });\r\n    });\r\n    \r\n  });\r\n\r\n  suite('PUT /api/issues/{project}', function() {\r\n    \r\n    test('Update one field on an issue', function(done) {\r\n      chai.request(server)\r\n      .put(`/api/issues/${testProject}`)\r\n      .send({\r\n        _id: testIssueId1,\r\n        issue_text: 'Updated text for testIssueId1'\r\n      })\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.deepEqual(res.body, { result: 'successfully updated', '_id': testIssueId1 });\r\n        done();\r\n      });\r\n    });\r\n    \r\n    test('Update multiple fields on an issue', function(done) {\r\n      chai.request(server)\r\n      .put(`/api/issues/${testProject}`)\r\n      .send({\r\n        _id: testIssueId2,\r\n        issue_title: 'Updated Title 2',\r\n        assigned_to: 'Tester X',\r\n        open: 'false' // Send as string, API should handle conversion\r\n      })\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.deepEqual(res.body, { result: 'successfully updated', '_id': testIssueId2 });\r\n        \r\n        // Verify update\r\n        chai.request(server)\r\n          .get(`/api/issues/${testProject}?_id=${testIssueId2}`)\r\n          .end(function(err, getRes) {\r\n            assert.equal(getRes.body[0].issue_title, 'Updated Title 2');\r\n            assert.equal(getRes.body[0].assigned_to, 'Tester X');\r\n            assert.isFalse(getRes.body[0].open);\r\n            done();\r\n          });\r\n      });\r\n    });\r\n    \r\n    test('Update an issue with missing _id', function(done) {\r\n      chai.request(server)\r\n      .put(`/api/issues/${testProject}`)\r\n      .send({\r\n        issue_title: 'No ID update'\r\n      })\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.deepEqual(res.body, { error: 'missing _id' });\r\n        done();\r\n      });\r\n    });\r\n    \r\n    test('Update an issue with no fields to update', function(done) {\r\n      chai.request(server)\r\n      .put(`/api/issues/${testProject}`)\r\n      .send({\r\n        _id: testIssueId1\r\n        // No other fields\r\n      })\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.deepEqual(res.body, { error: 'no update field(s) sent', '_id': testIssueId1 });\r\n        done();\r\n      });\r\n    });\r\n    \r\n    test('Update an issue with an invalid _id', function(done) {\r\n      const invalidId = 'invalid123id';\r\n      chai.request(server)\r\n      .put(`/api/issues/${testProject}`)\r\n      .send({\r\n        _id: invalidId,\r\n        issue_title: 'Update with invalid ID'\r\n      })\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.deepEqual(res.body, { error: 'could not update', '_id': invalidId });\r\n        done();\r\n      });\r\n    });\r\n    \r\n  });\r\n\r\n  suite('DELETE /api/issues/{project}', function() {\r\n    \r\n    test('Delete an issue', function(done) {\r\n      chai.request(server)\r\n      .delete(`/api/issues/${testProject}`)\r\n      .send({\r\n        _id: testIssueId1\r\n      })\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.deepEqual(res.body, { result: 'successfully deleted', '_id': testIssueId1 });\r\n        done();\r\n      });\r\n    });\r\n    \r\n    test('Delete an issue with an invalid _id', function(done) {\r\n      const invalidId = 'invalid123idfordelete';\r\n      chai.request(server)\r\n      .delete(`/api/issues/${testProject}`)\r\n      .send({\r\n        _id: invalidId\r\n      })\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.deepEqual(res.body, { error: 'could not delete', '_id': invalidId });\r\n        done();\r\n      });\r\n    });\r\n    \r\n    test('Delete an issue with missing _id', function(done) {\r\n      chai.request(server)\r\n      .delete(`/api/issues/${testProject}`)\r\n      .send({\r\n        // Missing _id\r\n      })\r\n      .end(function(err, res){\r\n        assert.equal(res.status, 200);\r\n        assert.deepEqual(res.body, { error: 'missing _id' });\r\n        done();\r\n      });\r\n    });\r\n\r\n    // Cleanup: Delete the second test issue\r\n    teardown(function(done) {\r\n      chai.request(server)\r\n        .delete(`/api/issues/${testProject}`)\r\n        .send({ _id: testIssueId2 })\r\n        .end(function() {\r\n          done(); // Don't care about the result, just cleaning up\r\n        });\r\n    });\r\n    \r\n  });\r\n\r\n});"],"mappings":"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","ignoreList":[]}},"mtime":1747903394443},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"filename\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.27.1:development":{"value":{"code":"'use strict';\n\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\nrequire('dotenv').config();\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst apiRoutes = require('./routes/api.js');\nconst fccTestingRoutes = require('./routes/fcctesting.js');\nconst runner = require('./test-runner');\nconst app = express();\n\n// Connect to MongoDB\nmongoose.connect(process.env.DB, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => {\n  console.log('MongoDB connected successfully');\n  // Start tests if NODE_ENV is 'test'\n  if (process.env.NODE_ENV === 'test') {\n    console.log('Running Tests...');\n    setTimeout(function () {\n      try {\n        runner.run();\n      } catch (e) {\n        console.log('Tests are not valid:', e);\n      }\n    }, 3500); // Increased timeout for DB connection\n  }\n}).catch(err => console.error('MongoDB connection error:', err));\napp.use('/public', express.static(process.cwd() + '/public'));\napp.use(cors({\n  origin: '*'\n})); //For FCC testing purposes\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n\n// Helmet security\napp.use(helmet.noSniff());\napp.use(helmet.xssFilter());\napp.use(helmet.hidePoweredBy()); // For FCC tests\n\n//Sample front-end\napp.route('/:project/').get(function (req, res) {\n  res.sendFile(process.cwd() + '/views/issue.html');\n});\n\n//Index page (static HTML)\napp.route('/').get(function (req, res) {\n  res.sendFile(process.cwd() + '/views/index.html');\n});\n\n//For FCC testing purposes\nfccTestingRoutes(app);\n\n//Routing for API \napiRoutes(app);\n\n//404 Not Found Middleware\napp.use(function (req, res, next) {\n  res.status(404).type('text').send('Not Found');\n});\n\n//Start our server and tests!\nconst listener = app.listen(process.env.PORT || 3000, function () {\n  console.log('Your app is listening on port ' + listener.address().port);\n});\nmodule.exports = app; //for testing\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJjb3JzIiwiY29uZmlnIiwiaGVsbWV0IiwibW9uZ29vc2UiLCJhcGlSb3V0ZXMiLCJmY2NUZXN0aW5nUm91dGVzIiwicnVubmVyIiwiYXBwIiwiY29ubmVjdCIsInByb2Nlc3MiLCJlbnYiLCJEQiIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiTk9ERV9FTlYiLCJzZXRUaW1lb3V0IiwicnVuIiwiZSIsImNhdGNoIiwiZXJyIiwiZXJyb3IiLCJ1c2UiLCJzdGF0aWMiLCJjd2QiLCJvcmlnaW4iLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwibm9TbmlmZiIsInhzc0ZpbHRlciIsImhpZGVQb3dlcmVkQnkiLCJyb3V0ZSIsImdldCIsInJlcSIsInJlcyIsInNlbmRGaWxlIiwibmV4dCIsInN0YXR1cyIsInR5cGUiLCJzZW5kIiwibGlzdGVuZXIiLCJsaXN0ZW4iLCJQT1JUIiwiYWRkcmVzcyIsInBvcnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFNpbmdvci5LUEFUQ0hPVVxcRGVza3RvcFxcaXNzdWUtdHJhY2tlclxcIiwic291cmNlcyI6WyJzZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuY29uc3QgZXhwcmVzcyAgICAgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IGJvZHlQYXJzZXIgID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcclxuY29uc3QgY29ycyAgICAgICAgPSByZXF1aXJlKCdjb3JzJyk7XHJcbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xyXG5jb25zdCBoZWxtZXQgICAgICA9IHJlcXVpcmUoJ2hlbG1ldCcpO1xyXG5jb25zdCBtb25nb29zZSAgICA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcblxyXG5jb25zdCBhcGlSb3V0ZXMgICAgICAgICA9IHJlcXVpcmUoJy4vcm91dGVzL2FwaS5qcycpO1xyXG5jb25zdCBmY2NUZXN0aW5nUm91dGVzICA9IHJlcXVpcmUoJy4vcm91dGVzL2ZjY3Rlc3RpbmcuanMnKTtcclxuY29uc3QgcnVubmVyICAgICAgICAgICAgPSByZXF1aXJlKCcuL3Rlc3QtcnVubmVyJyk7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG4vLyBDb25uZWN0IHRvIE1vbmdvREJcclxubW9uZ29vc2UuY29ubmVjdChwcm9jZXNzLmVudi5EQiwgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUsIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSB9KVxyXG4gIC50aGVuKCgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdNb25nb0RCIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHknKTtcclxuICAgIC8vIFN0YXJ0IHRlc3RzIGlmIE5PREVfRU5WIGlzICd0ZXN0J1xyXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAndGVzdCcpIHtcclxuICAgICAgY29uc29sZS5sb2coJ1J1bm5pbmcgVGVzdHMuLi4nKTtcclxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIHJ1bm5lci5ydW4oKTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnVGVzdHMgYXJlIG5vdCB2YWxpZDonLCBlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0sIDM1MDApOyAvLyBJbmNyZWFzZWQgdGltZW91dCBmb3IgREIgY29ubmVjdGlvblxyXG4gICAgfVxyXG4gIH0pXHJcbiAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmVycm9yKCdNb25nb0RCIGNvbm5lY3Rpb24gZXJyb3I6JywgZXJyKSk7XHJcblxyXG5cclxuYXBwLnVzZSgnL3B1YmxpYycsIGV4cHJlc3Muc3RhdGljKHByb2Nlc3MuY3dkKCkgKyAnL3B1YmxpYycpKTtcclxuXHJcbmFwcC51c2UoY29ycyh7b3JpZ2luOiAnKid9KSk7IC8vRm9yIEZDQyB0ZXN0aW5nIHB1cnBvc2VzXHJcblxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XHJcblxyXG4vLyBIZWxtZXQgc2VjdXJpdHlcclxuYXBwLnVzZShoZWxtZXQubm9TbmlmZigpKTtcclxuYXBwLnVzZShoZWxtZXQueHNzRmlsdGVyKCkpO1xyXG5hcHAudXNlKGhlbG1ldC5oaWRlUG93ZXJlZEJ5KCkpOyAvLyBGb3IgRkNDIHRlc3RzXHJcblxyXG4vL1NhbXBsZSBmcm9udC1lbmRcclxuYXBwLnJvdXRlKCcvOnByb2plY3QvJylcclxuICAuZ2V0KGZ1bmN0aW9uIChyZXEsIHJlcykge1xyXG4gICAgcmVzLnNlbmRGaWxlKHByb2Nlc3MuY3dkKCkgKyAnL3ZpZXdzL2lzc3VlLmh0bWwnKTtcclxuICB9KTtcclxuXHJcbi8vSW5kZXggcGFnZSAoc3RhdGljIEhUTUwpXHJcbmFwcC5yb3V0ZSgnLycpXHJcbiAgLmdldChmdW5jdGlvbiAocmVxLCByZXMpIHtcclxuICAgIHJlcy5zZW5kRmlsZShwcm9jZXNzLmN3ZCgpICsgJy92aWV3cy9pbmRleC5odG1sJyk7XHJcbiAgfSk7XHJcblxyXG4vL0ZvciBGQ0MgdGVzdGluZyBwdXJwb3Nlc1xyXG5mY2NUZXN0aW5nUm91dGVzKGFwcCk7XHJcblxyXG4vL1JvdXRpbmcgZm9yIEFQSSBcclxuYXBpUm91dGVzKGFwcCk7ICBcclxuICAgIFxyXG4vLzQwNCBOb3QgRm91bmQgTWlkZGxld2FyZVxyXG5hcHAudXNlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgcmVzLnN0YXR1cyg0MDQpXHJcbiAgICAudHlwZSgndGV4dCcpXHJcbiAgICAuc2VuZCgnTm90IEZvdW5kJyk7XHJcbn0pO1xyXG5cclxuLy9TdGFydCBvdXIgc2VydmVyIGFuZCB0ZXN0cyFcclxuY29uc3QgbGlzdGVuZXIgPSBhcHAubGlzdGVuKHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMCwgZnVuY3Rpb24gKCkge1xyXG4gIGNvbnNvbGUubG9nKCdZb3VyIGFwcCBpcyBsaXN0ZW5pbmcgb24gcG9ydCAnICsgbGlzdGVuZXIuYWRkcmVzcygpLnBvcnQpO1xyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwOyAvL2ZvciB0ZXN0aW5nIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUVaLE1BQU1BLE9BQU8sR0FBT0MsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUN0QyxNQUFNQyxVQUFVLEdBQUlELE9BQU8sQ0FBQyxhQUFhLENBQUM7QUFDMUMsTUFBTUUsSUFBSSxHQUFVRixPQUFPLENBQUMsTUFBTSxDQUFDO0FBQ25DQSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUNHLE1BQU0sQ0FBQyxDQUFDO0FBQzFCLE1BQU1DLE1BQU0sR0FBUUosT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUNyQyxNQUFNSyxRQUFRLEdBQU1MLE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFFdkMsTUFBTU0sU0FBUyxHQUFXTixPQUFPLENBQUMsaUJBQWlCLENBQUM7QUFDcEQsTUFBTU8sZ0JBQWdCLEdBQUlQLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQztBQUMzRCxNQUFNUSxNQUFNLEdBQWNSLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFFbEQsTUFBTVMsR0FBRyxHQUFHVixPQUFPLENBQUMsQ0FBQzs7QUFFckI7QUFDQU0sUUFBUSxDQUFDSyxPQUFPLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxFQUFFLEVBQUU7RUFBRUMsZUFBZSxFQUFFLElBQUk7RUFBRUMsa0JBQWtCLEVBQUU7QUFBSyxDQUFDLENBQUMsQ0FDbEZDLElBQUksQ0FBQyxNQUFNO0VBQ1ZDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGdDQUFnQyxDQUFDO0VBQzdDO0VBQ0EsSUFBSVAsT0FBTyxDQUFDQyxHQUFHLENBQUNPLFFBQVEsS0FBSyxNQUFN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","map":{"version":3,"names":["express","require","bodyParser","cors","config","helmet","mongoose","apiRoutes","fccTestingRoutes","runner","app","connect","process","env","DB","useNewUrlParser","useUnifiedTopology","then","console","log","NODE_ENV","setTimeout","run","e","catch","err","error","use","static","cwd","origin","json","urlencoded","extended","noSniff","xssFilter","hidePoweredBy","route","get","req","res","sendFile","next","status","type","send","listener","listen","PORT","address","port","module","exports"],"sourceRoot":"C:\\Users\\Singor.KPATCHOU\\Desktop\\issue-tracker\\","sources":["server.js"],"sourcesContent":["'use strict';\r\n\r\nconst express     = require('express');\r\nconst bodyParser  = require('body-parser');\r\nconst cors        = require('cors');\r\nrequire('dotenv').config();\r\nconst helmet      = require('helmet');\r\nconst mongoose    = require('mongoose');\r\n\r\nconst apiRoutes         = require('./routes/api.js');\r\nconst fccTestingRoutes  = require('./routes/fcctesting.js');\r\nconst runner            = require('./test-runner');\r\n\r\nconst app = express();\r\n\r\n// Connect to MongoDB\r\nmongoose.connect(process.env.DB, { useNewUrlParser: true, useUnifiedTopology: true })\r\n  .then(() => {\r\n    console.log('MongoDB connected successfully');\r\n    // Start tests if NODE_ENV is 'test'\r\n    if (process.env.NODE_ENV === 'test') {\r\n      console.log('Running Tests...');\r\n      setTimeout(function () {\r\n        try {\r\n          runner.run();\r\n        } catch (e) {\r\n          console.log('Tests are not valid:', e);\r\n        }\r\n      }, 3500); // Increased timeout for DB connection\r\n    }\r\n  })\r\n  .catch(err => console.error('MongoDB connection error:', err));\r\n\r\n\r\napp.use('/public', express.static(process.cwd() + '/public'));\r\n\r\napp.use(cors({origin: '*'})); //For FCC testing purposes\r\n\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\n// Helmet security\r\napp.use(helmet.noSniff());\r\napp.use(helmet.xssFilter());\r\napp.use(helmet.hidePoweredBy()); // For FCC tests\r\n\r\n//Sample front-end\r\napp.route('/:project/')\r\n  .get(function (req, res) {\r\n    res.sendFile(process.cwd() + '/views/issue.html');\r\n  });\r\n\r\n//Index page (static HTML)\r\napp.route('/')\r\n  .get(function (req, res) {\r\n    res.sendFile(process.cwd() + '/views/index.html');\r\n  });\r\n\r\n//For FCC testing purposes\r\nfccTestingRoutes(app);\r\n\r\n//Routing for API \r\napiRoutes(app);  \r\n    \r\n//404 Not Found Middleware\r\napp.use(function(req, res, next) {\r\n  res.status(404)\r\n    .type('text')\r\n    .send('Not Found');\r\n});\r\n\r\n//Start our server and tests!\r\nconst listener = app.listen(process.env.PORT || 3000, function () {\r\n  console.log('Your app is listening on port ' + listener.address().port);\r\n});\r\n\r\nmodule.exports = app; //for testing"],"mappings":"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","ignoreList":[]}},"mtime":1747903409825},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"filename\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\routes\\\\api.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.27.1:test":{"value":{"code":"// routes/api.js\n'use strict';\n\nconst Issue = require('../models/issue');\nconst mongoose = require('mongoose');\nmodule.exports = function (app) {\n  app.route('/api/issues/:project').get(async function (req, res) {\n    let project = req.params.project;\n    let query = req.query;\n    query.project = project; // Filter by project name\n\n    // Convert 'open' string from query to boolean if present\n    if (query.open === 'true') query.open = true;\n    if (query.open === 'false') query.open = false;\n    try {\n      const issues = await Issue.find(query).exec();\n      res.json(issues);\n    } catch (err) {\n      res.status(500).json({\n        error: 'could not retrieve issues'\n      });\n    }\n  }).post(async function (req, res) {\n    let project = req.params.project;\n    const {\n      issue_title,\n      issue_text,\n      created_by,\n      assigned_to,\n      status_text\n    } = req.body;\n    if (!issue_title || !issue_text || !created_by) {\n      return res.json({\n        error: 'required field(s) missing'\n      });\n    }\n    const newIssue = new Issue({\n      project: project,\n      issue_title,\n      issue_text,\n      created_by,\n      assigned_to: assigned_to || '',\n      status_text: status_text || '',\n      created_on: new Date(),\n      updated_on: new Date(),\n      open: true\n    });\n    try {\n      const savedIssue = await newIssue.save();\n      // Return all fields, even if optional ones were not submitted (they'll have defaults)\n      res.json({\n        _id: savedIssue._id,\n        issue_title: savedIssue.issue_title,\n        issue_text: savedIssue.issue_text,\n        created_on: savedIssue.created_on,\n        updated_on: savedIssue.updated_on,\n        created_by: savedIssue.created_by,\n        assigned_to: savedIssue.assigned_to,\n        open: savedIssue.open,\n        status_text: savedIssue.status_text\n      });\n    } catch (err) {\n      res.status(500).json({\n        error: 'could not save issue'\n      });\n    }\n  }).put(async function (req, res) {\n    // No project param needed here as _id is unique\n    const {\n      _id,\n      ...updateFields\n    } = req.body;\n    if (!_id) {\n      return res.json({\n        error: 'missing _id'\n      });\n    }\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      return res.json({\n        error: 'could not update',\n        '_id': _id\n      });\n    }\n    const fieldsToUpdate = {};\n    Object.keys(updateFields).forEach(key => {\n      if (updateFields[key] !== '' && updateFields[key] !== undefined && updateFields[key] !== null) {\n        fieldsToUpdate[key] = updateFields[key];\n      }\n    });\n    if (Object.keys(fieldsToUpdate).length === 0) {\n      return res.json({\n        error: 'no update field(s) sent',\n        '_id': _id\n      });\n    }\n    fieldsToUpdate.updated_on = new Date();\n    // Convert 'open' string to boolean if sent\n    if (typeof fieldsToUpdate.open === 'string') {\n      fieldsToUpdate.open = fieldsToUpdate.open === 'true';\n    }\n    try {\n      const updatedIssue = await Issue.findByIdAndUpdate(_id, fieldsToUpdate, {\n        new: true\n      });\n      if (!updatedIssue) {\n        return res.json({\n          error: 'could not update',\n          '_id': _id\n        });\n      }\n      res.json({\n        result: 'successfully updated',\n        '_id': _id\n      });\n    } catch (err) {\n      res.json({\n        error: 'could not update',\n        '_id': _id\n      });\n    }\n  }).delete(async function (req, res) {\n    // No project param needed here as _id is unique\n    const {\n      _id\n    } = req.body;\n    if (!_id) {\n      return res.json({\n        error: 'missing _id'\n      });\n    }\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      return res.json({\n        error: 'could not delete',\n        '_id': _id\n      });\n    }\n    try {\n      const deletedIssue = await Issue.findByIdAndDelete(_id);\n      if (!deletedIssue) {\n        return res.json({\n          error: 'could not delete',\n          '_id': _id\n        });\n      }\n      res.json({\n        result: 'successfully deleted',\n        '_id': _id\n      });\n    } catch (err) {\n      res.json({\n        error: 'could not delete',\n        '_id': _id\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Issue","require","mongoose","module","exports","app","route","get","req","res","project","params","query","open","issues","find","exec","json","err","status","error","post","issue_title","issue_text","created_by","assigned_to","status_text","body","newIssue","created_on","Date","updated_on","savedIssue","save","_id","put","updateFields","Types","ObjectId","isValid","fieldsToUpdate","Object","keys","forEach","key","undefined","length","updatedIssue","findByIdAndUpdate","new","result","delete","deletedIssue","findByIdAndDelete"],"sourceRoot":"C:\\Users\\Singor.KPATCHOU\\Desktop\\issue-tracker\\routes\\","sources":["api.js"],"sourcesContent":["// routes/api.js\r\n'use strict';\r\nconst Issue = require('../models/issue');\r\nconst mongoose = require('mongoose');\r\n\r\nmodule.exports = function (app) {\r\n\r\n  app.route('/api/issues/:project')\r\n  \r\n    .get(async function (req, res){\r\n      let project = req.params.project;\r\n      let query = req.query;\r\n      query.project = project; // Filter by project name\r\n\r\n      // Convert 'open' string from query to boolean if present\r\n      if (query.open === 'true') query.open = true;\r\n      if (query.open === 'false') query.open = false;\r\n\r\n      try {\r\n        const issues = await Issue.find(query).exec();\r\n        res.json(issues);\r\n      } catch (err) {\r\n        res.status(500).json({ error: 'could not retrieve issues' });\r\n      }\r\n    })\r\n    \r\n    .post(async function (req, res){\r\n      let project = req.params.project;\r\n      const { issue_title, issue_text, created_by, assigned_to, status_text } = req.body;\r\n\r\n      if (!issue_title || !issue_text || !created_by) {\r\n        return res.json({ error: 'required field(s) missing' });\r\n      }\r\n\r\n      const newIssue = new Issue({\r\n        project: project,\r\n        issue_title,\r\n        issue_text,\r\n        created_by,\r\n        assigned_to: assigned_to || '',\r\n        status_text: status_text || '',\r\n        created_on: new Date(),\r\n        updated_on: new Date(),\r\n        open: true\r\n      });\r\n\r\n      try {\r\n        const savedIssue = await newIssue.save();\r\n        // Return all fields, even if optional ones were not submitted (they'll have defaults)\r\n        res.json({\r\n          _id: savedIssue._id,\r\n          issue_title: savedIssue.issue_title,\r\n          issue_text: savedIssue.issue_text,\r\n          created_on: savedIssue.created_on,\r\n          updated_on: savedIssue.updated_on,\r\n          created_by: savedIssue.created_by,\r\n          assigned_to: savedIssue.assigned_to,\r\n          open: savedIssue.open,\r\n          status_text: savedIssue.status_text\r\n        });\r\n      } catch (err) {\r\n        res.status(500).json({ error: 'could not save issue' });\r\n      }\r\n    })\r\n    \r\n    .put(async function (req, res){\r\n      // No project param needed here as _id is unique\r\n      const { _id, ...updateFields } = req.body;\r\n\r\n      if (!_id) {\r\n        return res.json({ error: 'missing _id' });\r\n      }\r\n      \r\n      if (!mongoose.Types.ObjectId.isValid(_id)) {\r\n        return res.json({ error: 'could not update', '_id': _id });\r\n      }\r\n\r\n      const fieldsToUpdate = {};\r\n      Object.keys(updateFields).forEach(key => {\r\n        if (updateFields[key] !== '' && updateFields[key] !== undefined && updateFields[key] !== null) {\r\n          fieldsToUpdate[key] = updateFields[key];\r\n        }\r\n      });\r\n      \r\n      if (Object.keys(fieldsToUpdate).length === 0) {\r\n        return res.json({ error: 'no update field(s) sent', '_id': _id });\r\n      }\r\n\r\n      fieldsToUpdate.updated_on = new Date();\r\n      // Convert 'open' string to boolean if sent\r\n      if (typeof fieldsToUpdate.open === 'string') {\r\n         fieldsToUpdate.open = (fieldsToUpdate.open === 'true');\r\n      }\r\n\r\n\r\n      try {\r\n        const updatedIssue = await Issue.findByIdAndUpdate(_id, fieldsToUpdate, { new: true });\r\n        if (!updatedIssue) {\r\n          return res.json({ error: 'could not update', '_id': _id });\r\n        }\r\n        res.json({ result: 'successfully updated', '_id': _id });\r\n      } catch (err) {\r\n        res.json({ error: 'could not update', '_id': _id });\r\n      }\r\n    })\r\n    \r\n    .delete(async function (req, res){\r\n      // No project param needed here as _id is unique\r\n      const { _id } = req.body;\r\n\r\n      if (!_id) {\r\n        return res.json({ error: 'missing _id' });\r\n      }\r\n\r\n      if (!mongoose.Types.ObjectId.isValid(_id)) {\r\n        return res.json({ error: 'could not delete', '_id': _id });\r\n      }\r\n\r\n      try {\r\n        const deletedIssue = await Issue.findByIdAndDelete(_id);\r\n        if (!deletedIssue) {\r\n          return res.json({ error: 'could not delete', '_id': _id });\r\n        }\r\n        res.json({ result: 'successfully deleted', '_id': _id });\r\n      } catch (err) {\r\n        res.json({ error: 'could not delete', '_id': _id });\r\n      }\r\n    });\r\n    \r\n};"],"mappings":"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","ignoreList":[]}},"mtime":1747903421642},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"filename\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\models\\\\issue.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.27.1:test":{"value":{"code":"// models/issue.js\nconst mongoose = require('mongoose');\nconst {\n  Schema\n} = mongoose;\nconst issueSchema = new Schema({\n  project: {\n    type: String,\n    required: true\n  },\n  // To associate issue with a project internally\n  issue_title: {\n    type: String,\n    required: true\n  },\n  issue_text: {\n    type: String,\n    required: true\n  },\n  created_by: {\n    type: String,\n    required: true\n  },\n  assigned_to: {\n    type: String,\n    default: ''\n  },\n  status_text: {\n    type: String,\n    default: ''\n  },\n  created_on: {\n    type: Date,\n    default: Date.now\n  },\n  updated_on: {\n    type: Date,\n    default: Date.now\n  },\n  open: {\n    type: Boolean,\n    default: true\n  }\n});\nmodule.exports = mongoose.model('Issue', issueSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJpc3N1ZVNjaGVtYSIsInByb2plY3QiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJpc3N1ZV90aXRsZSIsImlzc3VlX3RleHQiLCJjcmVhdGVkX2J5IiwiYXNzaWduZWRfdG8iLCJkZWZhdWx0Iiwic3RhdHVzX3RleHQiLCJjcmVhdGVkX29uIiwiRGF0ZSIsIm5vdyIsInVwZGF0ZWRfb24iLCJvcGVuIiwiQm9vbGVhbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxTaW5nb3IuS1BBVENIT1VcXERlc2t0b3BcXGlzc3VlLXRyYWNrZXJcXG1vZGVsc1xcIiwic291cmNlcyI6WyJpc3N1ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtb2RlbHMvaXNzdWUuanNcclxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCB7IFNjaGVtYSB9ID0gbW9uZ29vc2U7XHJcblxyXG5jb25zdCBpc3N1ZVNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gIHByb2plY3Q6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSB9LCAvLyBUbyBhc3NvY2lhdGUgaXNzdWUgd2l0aCBhIHByb2plY3QgaW50ZXJuYWxseVxyXG4gIGlzc3VlX3RpdGxlOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcclxuICBpc3N1ZV90ZXh0OiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcclxuICBjcmVhdGVkX2J5OiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcclxuICBhc3NpZ25lZF90bzogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICcnIH0sXHJcbiAgc3RhdHVzX3RleHQ6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnJyB9LFxyXG4gIGNyZWF0ZWRfb246IHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfSxcclxuICB1cGRhdGVkX29uOiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6IERhdGUubm93IH0sXHJcbiAgb3BlbjogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiB0cnVlIH1cclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKCdJc3N1ZScsIGlzc3VlU2NoZW1hKTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBVSxDQUFDO0FBQ3BDLE1BQU07RUFBRUM7QUFBTyxDQUFDLEdBQUdGLFFBQVE7QUFFM0IsTUFBTUcsV0FBVyxHQUFHLElBQUlELE1BQU0sQ0FBQztFQUM3QkUsT0FBTyxFQUFFO0lBQUVDLElBQUksRUFBRUMsTUFBTTtJQUFFQyxRQUFRLEVBQUU7RUFBSyxDQUFDO0VBQUU7RUFDM0NDLFdBQVcsRUFBRTtJQUFFSCxJQUFJLEVBQUVDLE1BQU07SUFBRUMsUUFBUSxFQUFFO0VBQUssQ0FBQztFQUM3Q0UsVUFBVSxFQUFFO0lBQUVKLElBQUksRUFBRUMsTUFBTTtJQUFFQyxRQUFRLEVBQUU7RUFBSyxDQUFDO0VBQzVDRyxVQUFVLEVBQUU7SUFBRUwsSUFBSSxFQUFFQyxNQUFNO0lBQUVDLFFBQVEsRUFBRTtFQUFLLENBQUM7RUFDNUNJLFdBQVcsRUFBRTtJQUFFTixJQUFJLEVBQUVDLE1BQU07SUFBRU0sT0FBTyxFQUFFO0VBQUcsQ0FBQztFQUMxQ0MsV0FBVyxFQUFFO0lBQUVSLElBQUksRUFBRUMsTUFBTTtJQUFFTSxPQUFPLEVBQUU7RUFBRyxDQUFDO0VBQzFDRSxVQUFVLEVBQUU7SUFBRVQsSUFBSSxFQUFFVSxJQUFJO0lBQUVILE9BQU8sRUFBRUcsSUFBSSxDQUFDQztFQUFJLENBQUM7RUFDN0NDLFVBQVUsRUFBRTtJQUFFWixJQUFJLEVBQUVVLElBQUk7SUFBRUgsT0FBTyxFQUFFRyxJQUFJLENBQUNDO0VBQUksQ0FBQztFQUM3Q0UsSUFBSSxFQUFFO0lBQUViLElBQUksRUFBRWMsT0FBTztJQUFFUCxPQUFPLEVBQUU7RUFBSztBQUN2QyxDQUFDLENBQUM7QUFFRlEsTUFBTSxDQUFDQyxPQUFPLEdBQUdyQixRQUFRLENBQUNzQixLQUFLLENBQUMsT0FBTyxFQUFFbkIsV0FBVyxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["mongoose","require","Schema","issueSchema","project","type","String","required","issue_title","issue_text","created_by","assigned_to","default","status_text","created_on","Date","now","updated_on","open","Boolean","module","exports","model"],"sourceRoot":"C:\\Users\\Singor.KPATCHOU\\Desktop\\issue-tracker\\models\\","sources":["issue.js"],"sourcesContent":["// models/issue.js\r\nconst mongoose = require('mongoose');\r\nconst { Schema } = mongoose;\r\n\r\nconst issueSchema = new Schema({\r\n  project: { type: String, required: true }, // To associate issue with a project internally\r\n  issue_title: { type: String, required: true },\r\n  issue_text: { type: String, required: true },\r\n  created_by: { type: String, required: true },\r\n  assigned_to: { type: String, default: '' },\r\n  status_text: { type: String, default: '' },\r\n  created_on: { type: Date, default: Date.now },\r\n  updated_on: { type: Date, default: Date.now },\r\n  open: { type: Boolean, default: true }\r\n});\r\n\r\nmodule.exports = mongoose.model('Issue', issueSchema);"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAM;EAAEC;AAAO,CAAC,GAAGF,QAAQ;AAE3B,MAAMG,WAAW,GAAG,IAAID,MAAM,CAAC;EAC7BE,OAAO,EAAE;IAAEC,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAAE;EAC3CC,WAAW,EAAE;IAAEH,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAC7CE,UAAU,EAAE;IAAEJ,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAC5CG,UAAU,EAAE;IAAEL,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAC5CI,WAAW,EAAE;IAAEN,IAAI,EAAEC,MAAM;IAAEM,OAAO,EAAE;EAAG,CAAC;EAC1CC,WAAW,EAAE;IAAER,IAAI,EAAEC,MAAM;IAAEM,OAAO,EAAE;EAAG,CAAC;EAC1CE,UAAU,EAAE;IAAET,IAAI,EAAEU,IAAI;IAAEH,OAAO,EAAEG,IAAI,CAACC;EAAI,CAAC;EAC7CC,UAAU,EAAE;IAAEZ,IAAI,EAAEU,IAAI;IAAEH,OAAO,EAAEG,IAAI,CAACC;EAAI,CAAC;EAC7CE,IAAI,EAAE;IAAEb,IAAI,EAAEc,OAAO;IAAEP,OAAO,EAAE;EAAK;AACvC,CAAC,CAAC;AAEFQ,MAAM,CAACC,OAAO,GAAGrB,QAAQ,CAACsB,KAAK,CAAC,OAAO,EAAEnB,WAAW,CAAC","ignoreList":[]}},"mtime":1747903437890},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"filename\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\routes\\\\api.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.27.1:development":{"value":{"code":"// routes/api.js\n'use strict';\n\nconst Issue = require('../models/issue');\nconst mongoose = require('mongoose');\nmodule.exports = function (app) {\n  app.route('/api/issues/:project').get(async function (req, res) {\n    let project = req.params.project;\n    let query = req.query;\n    query.project = project; // Filter by project name\n\n    // Convert 'open' string from query to boolean if present\n    if (query.open === 'true') query.open = true;\n    if (query.open === 'false') query.open = false;\n    try {\n      const issues = await Issue.find(query).exec();\n      res.json(issues);\n    } catch (err) {\n      res.status(500).json({\n        error: 'could not retrieve issues'\n      });\n    }\n  }).post(async function (req, res) {\n    let project = req.params.project;\n    const {\n      issue_title,\n      issue_text,\n      created_by,\n      assigned_to,\n      status_text\n    } = req.body;\n    if (!issue_title || !issue_text || !created_by) {\n      return res.json({\n        error: 'required field(s) missing'\n      });\n    }\n    const newIssue = new Issue({\n      project: project,\n      issue_title,\n      issue_text,\n      created_by,\n      assigned_to: assigned_to || '',\n      status_text: status_text || '',\n      created_on: new Date(),\n      updated_on: new Date(),\n      open: true\n    });\n    try {\n      const savedIssue = await newIssue.save();\n      // Return all fields, even if optional ones were not submitted (they'll have defaults)\n      res.json({\n        _id: savedIssue._id,\n        issue_title: savedIssue.issue_title,\n        issue_text: savedIssue.issue_text,\n        created_on: savedIssue.created_on,\n        updated_on: savedIssue.updated_on,\n        created_by: savedIssue.created_by,\n        assigned_to: savedIssue.assigned_to,\n        open: savedIssue.open,\n        status_text: savedIssue.status_text\n      });\n    } catch (err) {\n      res.status(500).json({\n        error: 'could not save issue'\n      });\n    }\n  }).put(async function (req, res) {\n    // No project param needed here as _id is unique\n    const {\n      _id,\n      ...updateFields\n    } = req.body;\n    if (!_id) {\n      return res.json({\n        error: 'missing _id'\n      });\n    }\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      return res.json({\n        error: 'could not update',\n        '_id': _id\n      });\n    }\n    const fieldsToUpdate = {};\n    Object.keys(updateFields).forEach(key => {\n      if (updateFields[key] !== '' && updateFields[key] !== undefined && updateFields[key] !== null) {\n        fieldsToUpdate[key] = updateFields[key];\n      }\n    });\n    if (Object.keys(fieldsToUpdate).length === 0) {\n      return res.json({\n        error: 'no update field(s) sent',\n        '_id': _id\n      });\n    }\n    fieldsToUpdate.updated_on = new Date();\n    // Convert 'open' string to boolean if sent\n    if (typeof fieldsToUpdate.open === 'string') {\n      fieldsToUpdate.open = fieldsToUpdate.open === 'true';\n    }\n    try {\n      const updatedIssue = await Issue.findByIdAndUpdate(_id, fieldsToUpdate, {\n        new: true\n      });\n      if (!updatedIssue) {\n        return res.json({\n          error: 'could not update',\n          '_id': _id\n        });\n      }\n      res.json({\n        result: 'successfully updated',\n        '_id': _id\n      });\n    } catch (err) {\n      res.json({\n        error: 'could not update',\n        '_id': _id\n      });\n    }\n  }).delete(async function (req, res) {\n    // No project param needed here as _id is unique\n    const {\n      _id\n    } = req.body;\n    if (!_id) {\n      return res.json({\n        error: 'missing _id'\n      });\n    }\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      return res.json({\n        error: 'could not delete',\n        '_id': _id\n      });\n    }\n    try {\n      const deletedIssue = await Issue.findByIdAndDelete(_id);\n      if (!deletedIssue) {\n        return res.json({\n          error: 'could not delete',\n          '_id': _id\n        });\n      }\n      res.json({\n        result: 'successfully deleted',\n        '_id': _id\n      });\n    } catch (err) {\n      res.json({\n        error: 'could not delete',\n        '_id': _id\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJc3N1ZSIsInJlcXVpcmUiLCJtb25nb29zZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJyb3V0ZSIsImdldCIsInJlcSIsInJlcyIsInByb2plY3QiLCJwYXJhbXMiLCJxdWVyeSIsIm9wZW4iLCJpc3N1ZXMiLCJmaW5kIiwiZXhlYyIsImpzb24iLCJlcnIiLCJzdGF0dXMiLCJlcnJvciIsInBvc3QiLCJpc3N1ZV90aXRsZSIsImlzc3VlX3RleHQiLCJjcmVhdGVkX2J5IiwiYXNzaWduZWRfdG8iLCJzdGF0dXNfdGV4dCIsImJvZHkiLCJuZXdJc3N1ZSIsImNyZWF0ZWRfb24iLCJEYXRlIiwidXBkYXRlZF9vbiIsInNhdmVkSXNzdWUiLCJzYXZlIiwiX2lkIiwicHV0IiwidXBkYXRlRmllbGRzIiwiVHlwZXMiLCJPYmplY3RJZCIsImlzVmFsaWQiLCJmaWVsZHNUb1VwZGF0ZSIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwidW5kZWZpbmVkIiwibGVuZ3RoIiwidXBkYXRlZElzc3VlIiwiZmluZEJ5SWRBbmRVcGRhdGUiLCJuZXciLCJyZXN1bHQiLCJkZWxldGUiLCJkZWxldGVkSXNzdWUiLCJmaW5kQnlJZEFuZERlbGV0ZSJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxTaW5nb3IuS1BBVENIT1VcXERlc2t0b3BcXGlzc3VlLXRyYWNrZXJcXHJvdXRlc1xcIiwic291cmNlcyI6WyJhcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcm91dGVzL2FwaS5qc1xyXG4ndXNlIHN0cmljdCc7XHJcbmNvbnN0IElzc3VlID0gcmVxdWlyZSgnLi4vbW9kZWxzL2lzc3VlJyk7XHJcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFwcCkge1xyXG5cclxuICBhcHAucm91dGUoJy9hcGkvaXNzdWVzLzpwcm9qZWN0JylcclxuICBcclxuICAgIC5nZXQoYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKXtcclxuICAgICAgbGV0IHByb2plY3QgPSByZXEucGFyYW1zLnByb2plY3Q7XHJcbiAgICAgIGxldCBxdWVyeSA9IHJlcS5xdWVyeTtcclxuICAgICAgcXVlcnkucHJvamVjdCA9IHByb2plY3Q7IC8vIEZpbHRlciBieSBwcm9qZWN0IG5hbWVcclxuXHJcbiAgICAgIC8vIENvbnZlcnQgJ29wZW4nIHN0cmluZyBmcm9tIHF1ZXJ5IHRvIGJvb2xlYW4gaWYgcHJlc2VudFxyXG4gICAgICBpZiAocXVlcnkub3BlbiA9PT0gJ3RydWUnKSBxdWVyeS5vcGVuID0gdHJ1ZTtcclxuICAgICAgaWYgKHF1ZXJ5Lm9wZW4gPT09ICdmYWxzZScpIHF1ZXJ5Lm9wZW4gPSBmYWxzZTtcclxuXHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgaXNzdWVzID0gYXdhaXQgSXNzdWUuZmluZChxdWVyeSkuZXhlYygpO1xyXG4gICAgICAgIHJlcy5qc29uKGlzc3Vlcyk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdjb3VsZCBub3QgcmV0cmlldmUgaXNzdWVzJyB9KTtcclxuICAgICAgfVxyXG4gICAgfSlcclxuICAgIFxyXG4gICAgLnBvc3QoYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKXtcclxuICAgICAgbGV0IHByb2plY3QgPSByZXEucGFyYW1zLnByb2plY3Q7XHJcbiAgICAgIGNvbnN0IHsgaXNzdWVfdGl0bGUsIGlzc3VlX3RleHQsIGNyZWF0ZWRfYnksIGFzc2lnbmVkX3RvLCBzdGF0dXNfdGV4dCB9ID0gcmVxLmJvZHk7XHJcblxyXG4gICAgICBpZiAoIWlzc3VlX3RpdGxlIHx8ICFpc3N1ZV90ZXh0IHx8ICFjcmVhdGVkX2J5KSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgZXJyb3I6ICdyZXF1aXJlZCBmaWVsZChzKSBtaXNzaW5nJyB9KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgbmV3SXNzdWUgPSBuZXcgSXNzdWUoe1xyXG4gICAgICAgIHByb2plY3Q6IHByb2plY3QsXHJcbiAgICAgICAgaXNzdWVfdGl0bGUsXHJcbiAgICAgICAgaXNzdWVfdGV4dCxcclxuICAgICAgICBjcmVhdGVkX2J5LFxyXG4gICAgICAgIGFzc2lnbmVkX3RvOiBhc3NpZ25lZF90byB8fCAnJyxcclxuICAgICAgICBzdGF0dXNfdGV4dDogc3RhdHVzX3RleHQgfHwgJycsXHJcbiAgICAgICAgY3JlYXRlZF9vbjogbmV3IERhdGUoKSxcclxuICAgICAgICB1cGRhdGVkX29uOiBuZXcgRGF0ZSgpLFxyXG4gICAgICAgIG9wZW46IHRydWVcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHNhdmVkSXNzdWUgPSBhd2FpdCBuZXdJc3N1ZS5zYXZlKCk7XHJcbiAgICAgICAgLy8gUmV0dXJuIGFsbCBmaWVsZHMsIGV2ZW4gaWYgb3B0aW9uYWwgb25lcyB3ZXJlIG5vdCBzdWJtaXR0ZWQgKHRoZXknbGwgaGF2ZSBkZWZhdWx0cylcclxuICAgICAgICByZXMuanNvbih7XHJcbiAgICAgICAgICBfaWQ6IHNhdmVkSXNzdWUuX2lkLFxyXG4gICAgICAgICAgaXNzdWVfdGl0bGU6IHNhdmVkSXNzdWUuaXNzdWVfdGl0bGUsXHJcbiAgICAgICAgICBpc3N1ZV90ZXh0OiBzYXZlZElzc3VlLmlzc3VlX3RleHQsXHJcbiAgICAgICAgICBjcmVhdGVkX29uOiBzYXZlZElzc3VlLmNyZWF0ZWRfb24sXHJcbiAgICAgICAgICB1cGRhdGVkX29uOiBzYXZlZElzc3VlLnVwZGF0ZWRfb24sXHJcbiAgICAgICAgICBjcmVhdGVkX2J5OiBzYXZlZElzc3VlLmNyZWF0ZWRfYnksXHJcbiAgICAgICAgICBhc3NpZ25lZF90bzogc2F2ZWRJc3N1ZS5hc3NpZ25lZF90byxcclxuICAgICAgICAgIG9wZW46IHNhdmVkSXNzdWUub3BlbixcclxuICAgICAgICAgIHN0YXR1c190ZXh0OiBzYXZlZElzc3VlLnN0YXR1c190ZXh0XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdjb3VsZCBub3Qgc2F2ZSBpc3N1ZScgfSk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgICBcclxuICAgIC5wdXQoYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKXtcclxuICAgICAgLy8gTm8gcHJvamVjdCBwYXJhbSBuZWVkZWQgaGVyZSBhcyBfaWQgaXMgdW5pcXVlXHJcbiAgICAgIGNvbnN0IHsgX2lkLCAuLi51cGRhdGVGaWVsZHMgfSA9IHJlcS5ib2R5O1xyXG5cclxuICAgICAgaWYgKCFfaWQpIHtcclxuICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBlcnJvcjogJ21pc3NpbmcgX2lkJyB9KTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgaWYgKCFtb25nb29zZS5UeXBlcy5PYmplY3RJZC5pc1ZhbGlkKF9pZCkpIHtcclxuICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBlcnJvcjogJ2NvdWxkIG5vdCB1cGRhdGUnLCAnX2lkJzogX2lkIH0pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBmaWVsZHNUb1VwZGF0ZSA9IHt9O1xyXG4gICAgICBPYmplY3Qua2V5cyh1cGRhdGVGaWVsZHMpLmZvckVhY2goa2V5ID0+IHtcclxuICAgICAgICBpZiAodXBkYXRlRmllbGRzW2tleV0gIT09ICcnICYmIHVwZGF0ZUZpZWxkc1trZXldICE9PSB1bmRlZmluZWQgJiYgdXBkYXRlRmllbGRzW2tleV0gIT09IG51bGwpIHtcclxuICAgICAgICAgIGZpZWxkc1RvVXBkYXRlW2tleV0gPSB1cGRhdGVGaWVsZHNba2V5XTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICBcclxuICAgICAgaWYgKE9iamVjdC5rZXlzKGZpZWxkc1RvVXBkYXRlKS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBlcnJvcjogJ25vIHVwZGF0ZSBmaWVsZChzKSBzZW50JywgJ19pZCc6IF9pZCB9KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgZmllbGRzVG9VcGRhdGUudXBkYXRlZF9vbiA9IG5ldyBEYXRlKCk7XHJcbiAgICAgIC8vIENvbnZlcnQgJ29wZW4nIHN0cmluZyB0byBib29sZWFuIGlmIHNlbnRcclxuICAgICAgaWYgKHR5cGVvZiBmaWVsZHNUb1VwZGF0ZS5vcGVuID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICBmaWVsZHNUb1VwZGF0ZS5vcGVuID0gKGZpZWxkc1RvVXBkYXRlLm9wZW4gPT09ICd0cnVlJyk7XHJcbiAgICAgIH1cclxuXHJcblxyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHVwZGF0ZWRJc3N1ZSA9IGF3YWl0IElzc3VlLmZpbmRCeUlkQW5kVXBkYXRlKF9pZCwgZmllbGRzVG9VcGRhdGUsIHsgbmV3OiB0cnVlIH0pO1xyXG4gICAgICAgIGlmICghdXBkYXRlZElzc3VlKSB7XHJcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBlcnJvcjogJ2NvdWxkIG5vdCB1cGRhdGUnLCAnX2lkJzogX2lkIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXMuanNvbih7IHJlc3VsdDogJ3N1Y2Nlc3NmdWxseSB1cGRhdGVkJywgJ19pZCc6IF9pZCB9KTtcclxuICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgcmVzLmpzb24oeyBlcnJvcjogJ2NvdWxkIG5vdCB1cGRhdGUnLCAnX2lkJzogX2lkIH0pO1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgXHJcbiAgICAuZGVsZXRlKGFzeW5jIGZ1bmN0aW9uIChyZXEsIHJlcyl7XHJcbiAgICAgIC8vIE5vIHByb2plY3QgcGFyYW0gbmVlZGVkIGhlcmUgYXMgX2lkIGlzIHVuaXF1ZVxyXG4gICAgICBjb25zdCB7IF9pZCB9ID0gcmVxLmJvZHk7XHJcblxyXG4gICAgICBpZiAoIV9pZCkge1xyXG4gICAgICAgIHJldHVybiByZXMuanNvbih7IGVycm9yOiAnbWlzc2luZyBfaWQnIH0pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoIW1vbmdvb3NlLlR5cGVzLk9iamVjdElkLmlzVmFsaWQoX2lkKSkge1xyXG4gICAgICAgIHJldHVybiByZXMuanNvbih7IGVycm9yOiAnY291bGQgbm90IGRlbGV0ZScsICdfaWQnOiBfaWQgfSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgZGVsZXRlZElzc3VlID0gYXdhaXQgSXNzdWUuZmluZEJ5SWRBbmREZWxldGUoX2lkKTtcclxuICAgICAgICBpZiAoIWRlbGV0ZWRJc3N1ZSkge1xyXG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgZXJyb3I6ICdjb3VsZCBub3QgZGVsZXRlJywgJ19pZCc6IF9pZCB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmVzLmpzb24oeyByZXN1bHQ6ICdzdWNjZXNzZnVsbHkgZGVsZXRlZCcsICdfaWQnOiBfaWQgfSk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIHJlcy5qc29uKHsgZXJyb3I6ICdjb3VsZCBub3QgZGVsZXRlJywgJ19pZCc6IF9pZCB9KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICBcclxufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsWUFBWTs7QUFDWixNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztBQUN4QyxNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFFcENFLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLFVBQVVDLEdBQUcsRUFBRTtFQUU5QkEsR0FBRyxDQUFDQyxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FFOUJDLEdBQUcsQ0FBQyxnQkFBZ0JDLEdBQUcsRUFBRUMsR0FBRyxFQUFDO0lBQzVCLElBQUlDLE9BQU8sR0FBR0YsR0FBRyxDQUFDRyxNQUFN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","map":{"version":3,"names":["Issue","require","mongoose","module","exports","app","route","get","req","res","project","params","query","open","issues","find","exec","json","err","status","error","post","issue_title","issue_text","created_by","assigned_to","status_text","body","newIssue","created_on","Date","updated_on","savedIssue","save","_id","put","updateFields","Types","ObjectId","isValid","fieldsToUpdate","Object","keys","forEach","key","undefined","length","updatedIssue","findByIdAndUpdate","new","result","delete","deletedIssue","findByIdAndDelete"],"sourceRoot":"C:\\Users\\Singor.KPATCHOU\\Desktop\\issue-tracker\\routes\\","sources":["api.js"],"sourcesContent":["// routes/api.js\r\n'use strict';\r\nconst Issue = require('../models/issue');\r\nconst mongoose = require('mongoose');\r\n\r\nmodule.exports = function (app) {\r\n\r\n  app.route('/api/issues/:project')\r\n  \r\n    .get(async function (req, res){\r\n      let project = req.params.project;\r\n      let query = req.query;\r\n      query.project = project; // Filter by project name\r\n\r\n      // Convert 'open' string from query to boolean if present\r\n      if (query.open === 'true') query.open = true;\r\n      if (query.open === 'false') query.open = false;\r\n\r\n      try {\r\n        const issues = await Issue.find(query).exec();\r\n        res.json(issues);\r\n      } catch (err) {\r\n        res.status(500).json({ error: 'could not retrieve issues' });\r\n      }\r\n    })\r\n    \r\n    .post(async function (req, res){\r\n      let project = req.params.project;\r\n      const { issue_title, issue_text, created_by, assigned_to, status_text } = req.body;\r\n\r\n      if (!issue_title || !issue_text || !created_by) {\r\n        return res.json({ error: 'required field(s) missing' });\r\n      }\r\n\r\n      const newIssue = new Issue({\r\n        project: project,\r\n        issue_title,\r\n        issue_text,\r\n        created_by,\r\n        assigned_to: assigned_to || '',\r\n        status_text: status_text || '',\r\n        created_on: new Date(),\r\n        updated_on: new Date(),\r\n        open: true\r\n      });\r\n\r\n      try {\r\n        const savedIssue = await newIssue.save();\r\n        // Return all fields, even if optional ones were not submitted (they'll have defaults)\r\n        res.json({\r\n          _id: savedIssue._id,\r\n          issue_title: savedIssue.issue_title,\r\n          issue_text: savedIssue.issue_text,\r\n          created_on: savedIssue.created_on,\r\n          updated_on: savedIssue.updated_on,\r\n          created_by: savedIssue.created_by,\r\n          assigned_to: savedIssue.assigned_to,\r\n          open: savedIssue.open,\r\n          status_text: savedIssue.status_text\r\n        });\r\n      } catch (err) {\r\n        res.status(500).json({ error: 'could not save issue' });\r\n      }\r\n    })\r\n    \r\n    .put(async function (req, res){\r\n      // No project param needed here as _id is unique\r\n      const { _id, ...updateFields } = req.body;\r\n\r\n      if (!_id) {\r\n        return res.json({ error: 'missing _id' });\r\n      }\r\n      \r\n      if (!mongoose.Types.ObjectId.isValid(_id)) {\r\n        return res.json({ error: 'could not update', '_id': _id });\r\n      }\r\n\r\n      const fieldsToUpdate = {};\r\n      Object.keys(updateFields).forEach(key => {\r\n        if (updateFields[key] !== '' && updateFields[key] !== undefined && updateFields[key] !== null) {\r\n          fieldsToUpdate[key] = updateFields[key];\r\n        }\r\n      });\r\n      \r\n      if (Object.keys(fieldsToUpdate).length === 0) {\r\n        return res.json({ error: 'no update field(s) sent', '_id': _id });\r\n      }\r\n\r\n      fieldsToUpdate.updated_on = new Date();\r\n      // Convert 'open' string to boolean if sent\r\n      if (typeof fieldsToUpdate.open === 'string') {\r\n         fieldsToUpdate.open = (fieldsToUpdate.open === 'true');\r\n      }\r\n\r\n\r\n      try {\r\n        const updatedIssue = await Issue.findByIdAndUpdate(_id, fieldsToUpdate, { new: true });\r\n        if (!updatedIssue) {\r\n          return res.json({ error: 'could not update', '_id': _id });\r\n        }\r\n        res.json({ result: 'successfully updated', '_id': _id });\r\n      } catch (err) {\r\n        res.json({ error: 'could not update', '_id': _id });\r\n      }\r\n    })\r\n    \r\n    .delete(async function (req, res){\r\n      // No project param needed here as _id is unique\r\n      const { _id } = req.body;\r\n\r\n      if (!_id) {\r\n        return res.json({ error: 'missing _id' });\r\n      }\r\n\r\n      if (!mongoose.Types.ObjectId.isValid(_id)) {\r\n        return res.json({ error: 'could not delete', '_id': _id });\r\n      }\r\n\r\n      try {\r\n        const deletedIssue = await Issue.findByIdAndDelete(_id);\r\n        if (!deletedIssue) {\r\n          return res.json({ error: 'could not delete', '_id': _id });\r\n        }\r\n        res.json({ result: 'successfully deleted', '_id': _id });\r\n      } catch (err) {\r\n        res.json({ error: 'could not delete', '_id': _id });\r\n      }\r\n    });\r\n    \r\n};"],"mappings":"AAAA;AACA,YAAY;;AACZ,MAAMA,KAAK,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACxC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AAEpCE,MAAM,CAACC,OAAO,GAAG,UAAUC,GAAG,EAAE;EAE9BA,GAAG,CAACC,KAAK,CAAC,sBAAsB,CAAC,CAE9BC,GAAG,CAAC,gBAAgBC,GAAG,EAAEC,GAAG,EAAC;IAC5B,IAAIC,OAAO,GAAGF,GAAG,CAACG,MAAM,CAACD,OAAO;IAChC,IAAIE,KAAK,GAAGJ,GAAG,CAACI,KAAK;IACrBA,KAAK,CAACF,OAAO,GAAGA,OAAO,CAAC,CAAC;;IAEzB;IACA,IAAIE,KAAK,CAACC,IAAI,KAAK,MAAM,EAAED,KAAK,CAACC,IAAI,GAAG,IAAI;IAC5C,IAAID,KAAK,CAACC,IAAI,KAAK,OAAO,EAAED,KAAK,CAACC,IAAI,GAAG,KAAK;IAE9C,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMd,KAAK,CAACe,IAAI,CAACH,KAAK,CAAC,CAACI,IAAI,CAAC,CAAC;MAC7CP,GAAG,CAACQ,IAAI,CAACH,MAAM,CAAC;IAClB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZT,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;QAAEG,KAAK,EAAE;MAA4B,CAAC,CAAC;IAC9D;EACF,CAAC,CAAC,CAEDC,IAAI,CAAC,gBAAgBb,GAAG,EAAEC,GAAG,EAAC;IAC7B,IAAIC,OAAO,GAAGF,GAAG,CAACG,MAAM,CAACD,OAAO;IAChC,MAAM;MAAEY,WAAW;MAAEC,UAAU;MAAEC,UAAU;MAAEC,WAAW;MAAEC;IAAY,CAAC,GAAGlB,GAAG,CAACmB,IAAI;IAElF,IAAI,CAACL,WAAW,IAAI,CAACC,UAAU,IAAI,CAACC,UAAU,EAAE;MAC9C,OAAOf,GAAG,CAACQ,IAAI,CAAC;QAAEG,KAAK,EAAE;MAA4B,CAAC,CAAC;IACzD;IAEA,MAAMQ,QAAQ,GAAG,IAAI5B,KAAK,CAAC;MACzBU,OAAO,EAAEA,OAAO;MAChBY,WAAW;MACXC,UAAU;MACVC,UAAU;MACVC,WAAW,EAAEA,WAAW,IAAI,EAAE;MAC9BC,WAAW,EAAEA,WAAW,IAAI,EAAE;MAC9BG,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC;MACtBC,UAAU,EAAE,IAAID,IAAI,CAAC,CAAC;MACtBjB,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,IAAI;MACF,MAAMmB,UAAU,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACxC;MACAxB,GAAG,CAACQ,IAAI,CAAC;QACPiB,GAAG,EAAEF,UAAU,CAACE,GAAG;QACnBZ,WAAW,EAAEU,UAAU,CAACV,WAAW;QACnCC,UAAU,EAAES,UAAU,CAACT,UAAU;QACjCM,UAAU,EAAEG,UAAU,CAACH,UAAU;QACjCE,UAAU,EAAEC,UAAU,CAACD,UAAU;QACjCP,UAAU,EAAEQ,UAAU,CAACR,UAAU;QACjCC,WAAW,EAAEO,UAAU,CAACP,WAAW;QACnCZ,IAAI,EAAEmB,UAAU,CAACnB,IAAI;QACrBa,WAAW,EAAEM,UAAU,CAACN;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOR,GAAG,EAAE;MACZT,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;QAAEG,KAAK,EAAE;MAAuB,CAAC,CAAC;IACzD;EACF,CAAC,CAAC,CAEDe,GAAG,CAAC,gBAAgB3B,GAAG,EAAEC,GAAG,EAAC;IAC5B;IACA,MAAM;MAAEyB,GAAG;MAAE,GAAGE;IAAa,CAAC,GAAG5B,GAAG,CAACmB,IAAI;IAEzC,IAAI,CAACO,GAAG,EAAE;MACR,OAAOzB,GAAG,CAACQ,IAAI,CAAC;QAAEG,KAAK,EAAE;MAAc,CAAC,CAAC;IAC3C;IAEA,IAAI,CAAClB,QAAQ,CAACmC,KAAK,CAACC,QAAQ,CAACC,OAAO,CAACL,GAAG,CAAC,EAAE;MACzC,OAAOzB,GAAG,CAACQ,IAAI,CAAC;QAAEG,KAAK,EAAE,kBAAkB;QAAE,KAAK,EAAEc;MAAI,CAAC,CAAC;IAC5D;IAEA,MAAMM,cAAc,GAAG,CAAC,CAAC;IACzBC,MAAM,CAACC,IAAI,CAACN,YAAY,CAAC,CAACO,OAAO,CAACC,GAAG,IAAI;MACvC,IAAIR,YAAY,CAACQ,GAAG,CAAC,KAAK,EAAE,IAAIR,YAAY,CAACQ,GAAG,CAAC,KAAKC,SAAS,IAAIT,YAAY,CAACQ,GAAG,CAAC,KAAK,IAAI,EAAE;QAC7FJ,cAAc,CAACI,GAAG,CAAC,GAAGR,YAAY,CAACQ,GAAG,CAAC;MACzC;IACF,CAAC,CAAC;IAEF,IAAIH,MAAM,CAACC,IAAI,CAACF,cAAc,CAAC,CAACM,MAAM,KAAK,CAAC,EAAE;MAC5C,OAAOrC,GAAG,CAACQ,IAAI,CAAC;QAAEG,KAAK,EAAE,yBAAyB;QAAE,KAAK,EAAEc;MAAI,CAAC,CAAC;IACnE;IAEAM,cAAc,CAACT,UAAU,GAAG,IAAID,IAAI,CAAC,CAAC;IACtC;IACA,IAAI,OAAOU,cAAc,CAAC3B,IAAI,KAAK,QAAQ,EAAE;MAC1C2B,cAAc,CAAC3B,IAAI,GAAI2B,cAAc,CAAC3B,IAAI,KAAK,MAAO;IACzD;IAGA,IAAI;MACF,MAAMkC,YAAY,GAAG,MAAM/C,KAAK,CAACgD,iBAAiB,CAACd,GAAG,EAAEM,cAAc,EAAE;QAAES,GAAG,EAAE;MAAK,CAAC,CAAC;MACtF,IAAI,CAACF,YAAY,EAAE;QACjB,OAAOtC,GAAG,CAACQ,IAAI,CAAC;UAAEG,KAAK,EAAE,kBAAkB;UAAE,KAAK,EAAEc;QAAI,CAAC,CAAC;MAC5D;MACAzB,GAAG,CAACQ,IAAI,CAAC;QAAEiC,MAAM,EAAE,sBAAsB;QAAE,KAAK,EAAEhB;MAAI,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOhB,GAAG,EAAE;MACZT,GAAG,CAACQ,IAAI,CAAC;QAAEG,KAAK,EAAE,kBAAkB;QAAE,KAAK,EAAEc;MAAI,CAAC,CAAC;IACrD;EACF,CAAC,CAAC,CAEDiB,MAAM,CAAC,gBAAgB3C,GAAG,EAAEC,GAAG,EAAC;IAC/B;IACA,MAAM;MAAEyB;IAAI,CAAC,GAAG1B,GAAG,CAACmB,IAAI;IAExB,IAAI,CAACO,GAAG,EAAE;MACR,OAAOzB,GAAG,CAACQ,IAAI,CAAC;QAAEG,KAAK,EAAE;MAAc,CAAC,CAAC;IAC3C;IAEA,IAAI,CAAClB,QAAQ,CAACmC,KAAK,CAACC,QAAQ,CAACC,OAAO,CAACL,GAAG,CAAC,EAAE;MACzC,OAAOzB,GAAG,CAACQ,IAAI,CAAC;QAAEG,KAAK,EAAE,kBAAkB;QAAE,KAAK,EAAEc;MAAI,CAAC,CAAC;IAC5D;IAEA,IAAI;MACF,MAAMkB,YAAY,GAAG,MAAMpD,KAAK,CAACqD,iBAAiB,CAACnB,GAAG,CAAC;MACvD,IAAI,CAACkB,YAAY,EAAE;QACjB,OAAO3C,GAAG,CAACQ,IAAI,CAAC;UAAEG,KAAK,EAAE,kBAAkB;UAAE,KAAK,EAAEc;QAAI,CAAC,CAAC;MAC5D;MACAzB,GAAG,CAACQ,IAAI,CAAC;QAAEiC,MAAM,EAAE,sBAAsB;QAAE,KAAK,EAAEhB;MAAI,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOhB,GAAG,EAAE;MACZT,GAAG,CAACQ,IAAI,CAAC;QAAEG,KAAK,EAAE,kBAAkB;QAAE,KAAK,EAAEc;MAAI,CAAC,CAAC;IACrD;EACF,CAAC,CAAC;AAEN,CAAC","ignoreList":[]}},"mtime":1747903421642},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"filename\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\models\\\\issue.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.27.1:development":{"value":{"code":"// models/issue.js\nconst mongoose = require('mongoose');\nconst {\n  Schema\n} = mongoose;\nconst issueSchema = new Schema({\n  project: {\n    type: String,\n    required: true\n  },\n  // To associate issue with a project internally\n  issue_title: {\n    type: String,\n    required: true\n  },\n  issue_text: {\n    type: String,\n    required: true\n  },\n  created_by: {\n    type: String,\n    required: true\n  },\n  assigned_to: {\n    type: String,\n    default: ''\n  },\n  status_text: {\n    type: String,\n    default: ''\n  },\n  created_on: {\n    type: Date,\n    default: Date.now\n  },\n  updated_on: {\n    type: Date,\n    default: Date.now\n  },\n  open: {\n    type: Boolean,\n    default: true\n  }\n});\nmodule.exports = mongoose.model('Issue', issueSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJTY2hlbWEiLCJpc3N1ZVNjaGVtYSIsInByb2plY3QiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJpc3N1ZV90aXRsZSIsImlzc3VlX3RleHQiLCJjcmVhdGVkX2J5IiwiYXNzaWduZWRfdG8iLCJkZWZhdWx0Iiwic3RhdHVzX3RleHQiLCJjcmVhdGVkX29uIiwiRGF0ZSIsIm5vdyIsInVwZGF0ZWRfb24iLCJvcGVuIiwiQm9vbGVhbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbCJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxTaW5nb3IuS1BBVENIT1VcXERlc2t0b3BcXGlzc3VlLXRyYWNrZXJcXG1vZGVsc1xcIiwic291cmNlcyI6WyJpc3N1ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBtb2RlbHMvaXNzdWUuanNcclxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCB7IFNjaGVtYSB9ID0gbW9uZ29vc2U7XHJcblxyXG5jb25zdCBpc3N1ZVNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gIHByb2plY3Q6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSB9LCAvLyBUbyBhc3NvY2lhdGUgaXNzdWUgd2l0aCBhIHByb2plY3QgaW50ZXJuYWxseVxyXG4gIGlzc3VlX3RpdGxlOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcclxuICBpc3N1ZV90ZXh0OiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcclxuICBjcmVhdGVkX2J5OiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcclxuICBhc3NpZ25lZF90bzogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICcnIH0sXHJcbiAgc3RhdHVzX3RleHQ6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnJyB9LFxyXG4gIGNyZWF0ZWRfb246IHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfSxcclxuICB1cGRhdGVkX29uOiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6IERhdGUubm93IH0sXHJcbiAgb3BlbjogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiB0cnVlIH1cclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVsKCdJc3N1ZScsIGlzc3VlU2NoZW1hKTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBVSxDQUFDO0FBQ3BDLE1BQU07RUFBRUM7QUFBTyxDQUFDLEdBQUdGLFFBQVE7QUFFM0IsTUFBTUcsV0FBVyxHQUFHLElBQUlELE1BQU0sQ0FBQztFQUM3QkUsT0FBTyxFQUFFO0lBQUVDLElBQUksRUFBRUMsTUFBTTtJQUFFQyxRQUFRLEVBQUU7RUFBSyxDQUFDO0VBQUU7RUFDM0NDLFdBQVcsRUFBRTtJQUFFSCxJQUFJLEVBQUVDLE1BQU07SUFBRUMsUUFBUSxFQUFFO0VBQUssQ0FBQztFQUM3Q0UsVUFBVSxFQUFFO0lBQUVKLElBQUksRUFBRUMsTUFBTTtJQUFFQyxRQUFRLEVBQUU7RUFBSyxDQUFDO0VBQzVDRyxVQUFVLEVBQUU7SUFBRUwsSUFBSSxFQUFFQyxNQUFNO0lBQUVDLFFBQVEsRUFBRTtFQUFLLENBQUM7RUFDNUNJLFdBQVcsRUFBRTtJQUFFTixJQUFJLEVBQUVDLE1BQU07SUFBRU0sT0FBTyxFQUFFO0VBQUcsQ0FBQztFQUMxQ0MsV0FBVyxFQUFFO0lBQUVSLElBQUksRUFBRUMsTUFBTTtJQUFFTSxPQUFPLEVBQUU7RUFBRyxDQUFDO0VBQzFDRSxVQUFVLEVBQUU7SUFBRVQsSUFBSSxFQUFFVSxJQUFJO0lBQUVILE9BQU8sRUFBRUcsSUFBSSxDQUFDQztFQUFJLENBQUM7RUFDN0NDLFVBQVUsRUFBRTtJQUFFWixJQUFJLEVBQUVVLElBQUk7SUFBRUgsT0FBTyxFQUFFRyxJQUFJLENBQUNDO0VBQUksQ0FBQztFQUM3Q0UsSUFBSSxFQUFFO0lBQUViLElBQUksRUFBRWMsT0FBTztJQUFFUCxPQUFPLEVBQUU7RUFBSztBQUN2QyxDQUFDLENBQUM7QUFFRlEsTUFBTSxDQUFDQyxPQUFPLEdBQUdyQixRQUFRLENBQUNzQixLQUFLLENBQUMsT0FBTyxFQUFFbkIsV0FBVyxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["mongoose","require","Schema","issueSchema","project","type","String","required","issue_title","issue_text","created_by","assigned_to","default","status_text","created_on","Date","now","updated_on","open","Boolean","module","exports","model"],"sourceRoot":"C:\\Users\\Singor.KPATCHOU\\Desktop\\issue-tracker\\models\\","sources":["issue.js"],"sourcesContent":["// models/issue.js\r\nconst mongoose = require('mongoose');\r\nconst { Schema } = mongoose;\r\n\r\nconst issueSchema = new Schema({\r\n  project: { type: String, required: true }, // To associate issue with a project internally\r\n  issue_title: { type: String, required: true },\r\n  issue_text: { type: String, required: true },\r\n  created_by: { type: String, required: true },\r\n  assigned_to: { type: String, default: '' },\r\n  status_text: { type: String, default: '' },\r\n  created_on: { type: Date, default: Date.now },\r\n  updated_on: { type: Date, default: Date.now },\r\n  open: { type: Boolean, default: true }\r\n});\r\n\r\nmodule.exports = mongoose.model('Issue', issueSchema);"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAM;EAAEC;AAAO,CAAC,GAAGF,QAAQ;AAE3B,MAAMG,WAAW,GAAG,IAAID,MAAM,CAAC;EAC7BE,OAAO,EAAE;IAAEC,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAAE;EAC3CC,WAAW,EAAE;IAAEH,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAC7CE,UAAU,EAAE;IAAEJ,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAC5CG,UAAU,EAAE;IAAEL,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAC5CI,WAAW,EAAE;IAAEN,IAAI,EAAEC,MAAM;IAAEM,OAAO,EAAE;EAAG,CAAC;EAC1CC,WAAW,EAAE;IAAER,IAAI,EAAEC,MAAM;IAAEM,OAAO,EAAE;EAAG,CAAC;EAC1CE,UAAU,EAAE;IAAET,IAAI,EAAEU,IAAI;IAAEH,OAAO,EAAEG,IAAI,CAACC;EAAI,CAAC;EAC7CC,UAAU,EAAE;IAAEZ,IAAI,EAAEU,IAAI;IAAEH,OAAO,EAAEG,IAAI,CAACC;EAAI,CAAC;EAC7CE,IAAI,EAAE;IAAEb,IAAI,EAAEc,OAAO;IAAEP,OAAO,EAAE;EAAK;AACvC,CAAC,CAAC;AAEFQ,MAAM,CAACC,OAAO,GAAGrB,QAAQ,CAACsB,KAAK,CAAC,OAAO,EAAEnB,WAAW,CAAC","ignoreList":[]}},"mtime":1747903437890},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"filename\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\routes\\\\fcctesting.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.27.1:development":{"value":{"code":"// routes/fcctesting.js\n'use strict';\n\nconst fs = require('fs');\nmodule.exports = function (app) {\n  app.route('/_api/server.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(process.cwd() + '/server.js', function (err, data) {\n      if (err) return next(err);\n      res.send(data.toString());\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwicm91dGUiLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY29uc29sZSIsImxvZyIsInJlYWRGaWxlIiwicHJvY2VzcyIsImN3ZCIsImVyciIsImRhdGEiLCJzZW5kIiwidG9TdHJpbmciXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcU2luZ29yLktQQVRDSE9VXFxEZXNrdG9wXFxpc3N1ZS10cmFja2VyXFxyb3V0ZXNcXCIsInNvdXJjZXMiOlsiZmNjdGVzdGluZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByb3V0ZXMvZmNjdGVzdGluZy5qc1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oYXBwKSB7XG4gIGFwcC5yb3V0ZSgnL19hcGkvc2VydmVyLmpzJylcbiAgICAuZ2V0KGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgICBjb25zb2xlLmxvZygncmVxdWVzdGVkJyk7XG4gICAgICBmcy5yZWFkRmlsZShwcm9jZXNzLmN3ZCgpICsgJy9zZXJ2ZXIuanMnLCBmdW5jdGlvbihlcnIsIGRhdGEpIHtcbiAgICAgICAgaWYoZXJyKSByZXR1cm4gbmV4dChlcnIpO1xuICAgICAgICByZXMuc2VuZChkYXRhLnRvU3RyaW5nKCkpO1xuICAgICAgfSk7XG4gICAgfSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLFlBQVk7O0FBRVosTUFBTUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsSUFBSSxDQUFDO0FBRXhCQyxNQUFNLENBQUNDLE9BQU8sR0FBRyxVQUFTQyxHQUFHLEVBQUU7RUFDN0JBLEdBQUcsQ0FBQ0MsS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQ3pCQyxHQUFHLENBQUMsVUFBU0MsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLElBQUksRUFBRTtJQUM1QkMsT0FBTyxDQUFDQyxHQUFHLENBQUMsV0FBVyxDQUFDO0lBQ3hCWCxFQUFFLENBQUNZLFFBQVEsQ0FBQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsQ0FBQyxHQUFHLFlBQVksRUFBRSxVQUFTQyxHQUFHLEVBQUVDLElBQUksRUFBRTtNQUM1RCxJQUFHRCxHQUFHLEVBQUUsT0FBT04sSUFBSSxDQUFDTSxHQUFHLENBQUM7TUFDeEJQLEdBQUcsQ0FBQ1MsSUFBSSxDQUFDRCxJQUFJLENBQUNFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDM0IsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0FBQ04sQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["fs","require","module","exports","app","route","get","req","res","next","console","log","readFile","process","cwd","err","data","send","toString"],"sourceRoot":"C:\\Users\\Singor.KPATCHOU\\Desktop\\issue-tracker\\routes\\","sources":["fcctesting.js"],"sourcesContent":["// routes/fcctesting.js\n'use strict';\n\nconst fs = require('fs');\n\nmodule.exports = function(app) {\n  app.route('/_api/server.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(process.cwd() + '/server.js', function(err, data) {\n        if(err) return next(err);\n        res.send(data.toString());\n      });\n    });\n};\n"],"mappings":"AAAA;AACA,YAAY;;AAEZ,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAExBC,MAAM,CAACC,OAAO,GAAG,UAASC,GAAG,EAAE;EAC7BA,GAAG,CAACC,KAAK,CAAC,iBAAiB,CAAC,CACzBC,GAAG,CAAC,UAASC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;IAC5BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBX,EAAE,CAACY,QAAQ,CAACC,OAAO,CAACC,GAAG,CAAC,CAAC,GAAG,YAAY,EAAE,UAASC,GAAG,EAAEC,IAAI,EAAE;MAC5D,IAAGD,GAAG,EAAE,OAAON,IAAI,CAACM,GAAG,CAAC;MACxBP,GAAG,CAACS,IAAI,CAACD,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,CAAC;AACN,CAAC","ignoreList":[]}},"mtime":1747915059942},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"filename\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\\\\test-runner.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Singor.KPATCHOU\\\\Desktop\\\\issue-tracker\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.27.1:development":{"value":{"code":"// test-runner.js\n'use strict';\n\nconst chai = require('chai');\nconst chaiHttp = require('chai-http');\nconst server = require('./server');\nconst runner = {\n  run: function () {\n    const tests = [];\n    let error;\n    let failures = 0;\n    let i = 0;\n    const testDir = './tests';\n\n    // Configure chai\n    chai.use(chaiHttp);\n\n    // Run each test file\n    require('fs').readdirSync(testDir).filter(function (file) {\n      return file.endsWith('.js');\n    }).forEach(function (file) {\n      const test = require(testDir + '/' + file);\n      if (test) {\n        tests.push(test);\n      }\n    });\n\n    // Run tests\n    function runNextTest() {\n      if (i >= tests.length) {\n        // All tests complete\n        console.log('All tests completed');\n        if (failures > 0) {\n          console.log('Some tests failed');\n          process.exit(1);\n        } else {\n          console.log('All tests passed!');\n          process.exit(0);\n        }\n        return;\n      }\n      const currentTest = tests[i++];\n      console.log('Running test suite: ' + currentTest.name);\n      try {\n        currentTest(function () {\n          console.log('Test suite completed');\n          runNextTest();\n        });\n      } catch (e) {\n        console.error('Test error:', e);\n        failures++;\n        runNextTest();\n      }\n    }\n\n    // Start running tests\n    runNextTest();\n  }\n};\nmodule.exports = runner;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjaGFpIiwicmVxdWlyZSIsImNoYWlIdHRwIiwic2VydmVyIiwicnVubmVyIiwicnVuIiwidGVzdHMiLCJlcnJvciIsImZhaWx1cmVzIiwiaSIsInRlc3REaXIiLCJ1c2UiLCJyZWFkZGlyU3luYyIsImZpbHRlciIsImZpbGUiLCJlbmRzV2l0aCIsImZvckVhY2giLCJ0ZXN0IiwicHVzaCIsInJ1bk5leHRUZXN0IiwibGVuZ3RoIiwiY29uc29sZSIsImxvZyIsInByb2Nlc3MiLCJleGl0IiwiY3VycmVudFRlc3QiLCJuYW1lIiwiZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcU2luZ29yLktQQVRDSE9VXFxEZXNrdG9wXFxpc3N1ZS10cmFja2VyXFwiLCJzb3VyY2VzIjpbInRlc3QtcnVubmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHRlc3QtcnVubmVyLmpzXG4ndXNlIHN0cmljdCc7XG5jb25zdCBjaGFpID0gcmVxdWlyZSgnY2hhaScpO1xuY29uc3QgY2hhaUh0dHAgPSByZXF1aXJlKCdjaGFpLWh0dHAnKTtcbmNvbnN0IHNlcnZlciA9IHJlcXVpcmUoJy4vc2VydmVyJyk7XG5jb25zdCBydW5uZXIgPSB7XG4gIHJ1bjogZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgdGVzdHMgPSBbXTtcbiAgICBsZXQgZXJyb3I7XG4gICAgbGV0IGZhaWx1cmVzID0gMDtcbiAgICBsZXQgaSA9IDA7XG4gICAgY29uc3QgdGVzdERpciA9ICcuL3Rlc3RzJztcbiAgICBcbiAgICAvLyBDb25maWd1cmUgY2hhaVxuICAgIGNoYWkudXNlKGNoYWlIdHRwKTtcbiAgICBcbiAgICAvLyBSdW4gZWFjaCB0ZXN0IGZpbGVcbiAgICByZXF1aXJlKCdmcycpLnJlYWRkaXJTeW5jKHRlc3REaXIpLmZpbHRlcihmdW5jdGlvbihmaWxlKSB7XG4gICAgICByZXR1cm4gZmlsZS5lbmRzV2l0aCgnLmpzJyk7XG4gICAgfSkuZm9yRWFjaChmdW5jdGlvbihmaWxlKSB7XG4gICAgICBjb25zdCB0ZXN0ID0gcmVxdWlyZSh0ZXN0RGlyICsgJy8nICsgZmlsZSk7XG4gICAgICBpZiAodGVzdCkge1xuICAgICAgICB0ZXN0cy5wdXNoKHRlc3QpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIC8vIFJ1biB0ZXN0c1xuICAgIGZ1bmN0aW9uIHJ1bk5leHRUZXN0KCkge1xuICAgICAgaWYgKGkgPj0gdGVzdHMubGVuZ3RoKSB7XG4gICAgICAgIC8vIEFsbCB0ZXN0cyBjb21wbGV0ZVxuICAgICAgICBjb25zb2xlLmxvZygnQWxsIHRlc3RzIGNvbXBsZXRlZCcpO1xuICAgICAgICBpZiAoZmFpbHVyZXMgPiAwKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1NvbWUgdGVzdHMgZmFpbGVkJyk7XG4gICAgICAgICAgcHJvY2Vzcy5leGl0KDEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdBbGwgdGVzdHMgcGFzc2VkIScpO1xuICAgICAgICAgIHByb2Nlc3MuZXhpdCgwKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBcbiAgICAgIGNvbnN0IGN1cnJlbnRUZXN0ID0gdGVzdHNbaSsrXTtcbiAgICAgIGNvbnNvbGUubG9nKCdSdW5uaW5nIHRlc3Qgc3VpdGU6ICcgKyBjdXJyZW50VGVzdC5uYW1lKTtcbiAgICAgIFxuICAgICAgdHJ5IHtcbiAgICAgICAgY3VycmVudFRlc3QoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1Rlc3Qgc3VpdGUgY29tcGxldGVkJyk7XG4gICAgICAgICAgcnVuTmV4dFRlc3QoKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1Rlc3QgZXJyb3I6JywgZSk7XG4gICAgICAgIGZhaWx1cmVzKys7XG4gICAgICAgIHJ1bk5leHRUZXN0KCk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8vIFN0YXJ0IHJ1bm5pbmcgdGVzdHNcbiAgICBydW5OZXh0VGVzdCgpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJ1bm5lcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxZQUFZOztBQUNaLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUM1QixNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxXQUFXLENBQUM7QUFDckMsTUFBTUUsTUFBTSxHQUFHRixPQUFPLENBQUMsVUFBVSxDQUFDO0FBQ2xDLE1BQU1HLE1BQU0sR0FBRztFQUNiQyxHQUFHLEVBQUUsU0FBQUEsQ0FBQSxFQUFXO0lBQ2QsTUFBTUMsS0FBSyxHQUFHLEVBQUU7SUFDaEIsSUFBSUMsS0FBSztJQUNULElBQUlDLFFBQVEsR0FBRyxDQUFDO0lBQ2hCLElBQUlDLENBQUMsR0FBRyxDQUFDO0lBQ1QsTUFBTUMsT0FBTyxHQUFHLFNBQVM7O0lBRXpCO0lBQ0FWLElBQUksQ0FBQ1csR0FBRyxDQUFDVCxRQUFRLENBQUM7O0lBRWxCO0lBQ0FELE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQ1csV0FBVyxDQUFDRixPQUFPLENBQUMsQ0FBQ0csTUFBTSxDQUFDLFVBQVNDLElBQUksRUFBRTtNQUN2RCxPQUFPQSxJQUFJLENBQUNDLFFBQVEsQ0FBQyxLQUFLLENBQUM7SUFDN0IsQ0FBQyxDQUFDLENBQUNDLE9BQU8sQ0FBQyxVQUFTRixJQUFJLEVBQUU7TUFDeEIsTUFBTUcsSUFBSSxHQUFHaEIsT0FBTyxDQUFDUyxPQUFPLEdBQUcsR0FBRyxHQUFHSSxJQUFJLENBQUM7TUFDMUMsSUFBSUcsSUFBSSxFQUFFO1FBQ1JYLEtBQUssQ0FBQ1ksSUFBSSxDQUFDRCxJQUFJLENBQUM7TUFDbEI7SUFDRixDQUFDLENBQUM7O0lBRUY7SUFDQSxTQUFTRSxXQUFXQSxDQUFBLEVBQUc7TUFDckIsSUFBSVYsQ0FBQyxJQUFJSCxLQUFLLENBQUNjLE1BQU0sRUFBRTtRQUNyQjtRQUNBQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQztRQUNsQyxJQUFJZCxRQUFRLEdBQUcsQ0FBQyxFQUFFO1VBQ2hCYSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQztVQUNoQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLENBQUMsTUFBTTtVQUNMSCxPQUFPLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQztVQUNoQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2pCO1FBQ0E7TUFDRjtNQUVBLE1BQU1DLFdBQVcsR0FBR25CLEtBQUssQ0FBQ0csQ0FBQyxFQUFFLENBQUM7TUFDOUJZLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHNCQUFzQixHQUFHRyxXQUFXLENBQUNDLElBQUksQ0FBQztNQUV0RCxJQUFJO1FBQ0ZELFdBQVcsQ0FBQyxZQUFXO1VBQ3JCSixPQUFPLENBQUNDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQztVQUNuQ0gsV0FBVyxDQUFDLENBQUM7UUFDZixDQUFDLENBQUM7TUFDSixDQUFDLENBQUMsT0FBT1EsQ0FBQyxFQUFFO1FBQ1ZOLE9BQU8sQ0FBQ2QsS0FBSyxDQUFDLGFBQWEsRUFBRW9CLENBQUMsQ0FBQztRQUMvQm5CLFFBQVEsRUFBRTtRQUNWVyxXQUFXLENBQUMsQ0FBQztNQUNmO0lBQ0Y7O0lBRUE7SUFDQUEsV0FBVyxDQUFDLENBQUM7RUFDZjtBQUNGLENBQUM7QUFFRFMsTUFBTSxDQUFDQyxPQUFPLEdBQUd6QixNQUFNIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["chai","require","chaiHttp","server","runner","run","tests","error","failures","i","testDir","use","readdirSync","filter","file","endsWith","forEach","test","push","runNextTest","length","console","log","process","exit","currentTest","name","e","module","exports"],"sourceRoot":"C:\\Users\\Singor.KPATCHOU\\Desktop\\issue-tracker\\","sources":["test-runner.js"],"sourcesContent":["// test-runner.js\n'use strict';\nconst chai = require('chai');\nconst chaiHttp = require('chai-http');\nconst server = require('./server');\nconst runner = {\n  run: function() {\n    const tests = [];\n    let error;\n    let failures = 0;\n    let i = 0;\n    const testDir = './tests';\n    \n    // Configure chai\n    chai.use(chaiHttp);\n    \n    // Run each test file\n    require('fs').readdirSync(testDir).filter(function(file) {\n      return file.endsWith('.js');\n    }).forEach(function(file) {\n      const test = require(testDir + '/' + file);\n      if (test) {\n        tests.push(test);\n      }\n    });\n    \n    // Run tests\n    function runNextTest() {\n      if (i >= tests.length) {\n        // All tests complete\n        console.log('All tests completed');\n        if (failures > 0) {\n          console.log('Some tests failed');\n          process.exit(1);\n        } else {\n          console.log('All tests passed!');\n          process.exit(0);\n        }\n        return;\n      }\n      \n      const currentTest = tests[i++];\n      console.log('Running test suite: ' + currentTest.name);\n      \n      try {\n        currentTest(function() {\n          console.log('Test suite completed');\n          runNextTest();\n        });\n      } catch (e) {\n        console.error('Test error:', e);\n        failures++;\n        runNextTest();\n      }\n    }\n    \n    // Start running tests\n    runNextTest();\n  }\n};\n\nmodule.exports = runner;\n"],"mappings":"AAAA;AACA,YAAY;;AACZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAW,CAAC;AACrC,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAU,CAAC;AAClC,MAAMG,MAAM,GAAG;EACbC,GAAG,EAAE,SAAAA,CAAA,EAAW;IACd,MAAMC,KAAK,GAAG,EAAE;IAChB,IAAIC,KAAK;IACT,IAAIC,QAAQ,GAAG,CAAC;IAChB,IAAIC,CAAC,GAAG,CAAC;IACT,MAAMC,OAAO,GAAG,SAAS;;IAEzB;IACAV,IAAI,CAACW,GAAG,CAACT,QAAQ,CAAC;;IAElB;IACAD,OAAO,CAAC,IAAI,CAAC,CAACW,WAAW,CAACF,OAAO,CAAC,CAACG,MAAM,CAAC,UAASC,IAAI,EAAE;MACvD,OAAOA,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC;IAC7B,CAAC,CAAC,CAACC,OAAO,CAAC,UAASF,IAAI,EAAE;MACxB,MAAMG,IAAI,GAAGhB,OAAO,CAACS,OAAO,GAAG,GAAG,GAAGI,IAAI,CAAC;MAC1C,IAAIG,IAAI,EAAE;QACRX,KAAK,CAACY,IAAI,CAACD,IAAI,CAAC;MAClB;IACF,CAAC,CAAC;;IAEF;IACA,SAASE,WAAWA,CAAA,EAAG;MACrB,IAAIV,CAAC,IAAIH,KAAK,CAACc,MAAM,EAAE;QACrB;QACAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClC,IAAId,QAAQ,GAAG,CAAC,EAAE;UAChBa,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;UAChCC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;QACjB,CAAC,MAAM;UACLH,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;UAChCC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;QACjB;QACA;MACF;MAEA,MAAMC,WAAW,GAAGnB,KAAK,CAACG,CAAC,EAAE,CAAC;MAC9BY,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGG,WAAW,CAACC,IAAI,CAAC;MAEtD,IAAI;QACFD,WAAW,CAAC,YAAW;UACrBJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;UACnCH,WAAW,CAAC,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOQ,CAAC,EAAE;QACVN,OAAO,CAACd,KAAK,CAAC,aAAa,EAAEoB,CAAC,CAAC;QAC/BnB,QAAQ,EAAE;QACVW,WAAW,CAAC,CAAC;MACf;IACF;;IAEA;IACAA,WAAW,CAAC,CAAC;EACf;AACF,CAAC;AAEDS,MAAM,CAACC,OAAO,GAAGzB,MAAM","ignoreList":[]}},"mtime":1747915127958}}